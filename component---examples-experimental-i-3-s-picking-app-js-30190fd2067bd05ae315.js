(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{"W/y+":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return Pe})),n.d(t,"renderToDOM",(function(){return Ce}));var r=n("o0o1"),o=n.n(r),i=(n("wcNg"),n("HaE+")),a=n("JX7q"),s=n("dI71"),l=n("rePB"),c=n("q1tI"),u=n.n(c),p=n("i8i4"),f=n("UP1k"),d=n("rta6"),m=n("yYqN"),h=n("Wium"),g=n("BENj"),v=n("Aabs"),b=n("0i8A"),_=n("V3d6"),S=n("G8qk"),y=n("Jh/b"),I=n("+w+S"),O="#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\n\nstruct AmbientLight {\n vec3 color;\n};\n\nstruct PointLight {\n vec3 color;\n vec3 position;\n vec3 attenuation;\n};\n\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\n\nuniform AmbientLight lighting_uAmbientLight;\nuniform PointLight lighting_uPointLight[MAX_LIGHTS];\nuniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];\nuniform int lighting_uPointLightCount;\nuniform int lighting_uDirectionalLightCount;\n\nuniform bool lighting_uEnabled;\n\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n\n#endif\n",L={name:"lights",vs:O,fs:O,getUniforms:function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:P;if("lightSources"in t){var n=t.lightSources||{},r=n.ambientLight,o=n.pointLights,i=n.directionalLights,a=r||o&&o.length>0||i&&i.length>0;return a?Object.assign({},x({ambientLight:r,pointLights:o,directionalLights:i}),{lighting_uEnabled:!0}):{lighting_uEnabled:!1}}if("lights"in t){var s={pointLights:[],directionalLights:[]},l=!0,c=!1,u=void 0;try{for(var p,f=(t.lights||[])[Symbol.iterator]();!(l=(p=f.next()).done);l=!0){var d=p.value;switch(d.type){case"ambient":s.ambientLight=d;break;case"directional":s.directionalLights.push(d);break;case"point":s.pointLights.push(d)}}}catch(m){c=!0,u=m}finally{try{l||null==f.return||f.return()}finally{if(c)throw u}}return e({lightSources:s})}return{}},defines:{MAX_LIGHTS:3}},P={};function C(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.color,n=void 0===t?[0,0,0]:t,r=e.intensity,o=void 0===r?1:r;return n.map((function(e){return e*o/255}))}function x(e){var t=e.ambientLight,n=e.pointLights,r=void 0===n?[]:n,o=e.directionalLights,i=void 0===o?[]:o,a={};return a["lighting_uAmbientLight.color"]=t?C(t):[0,0,0],r.forEach((function(e,t){a["lighting_uPointLight[".concat(t,"].color")]=C(e),a["lighting_uPointLight[".concat(t,"].position")]=e.position,a["lighting_uPointLight[".concat(t,"].attenuation")]=e.attenuation||[1,0,0]})),a.lighting_uPointLightCount=r.length,i.forEach((function(e,t){a["lighting_uDirectionalLight[".concat(t,"].color")]=C(e),a["lighting_uDirectionalLight[".concat(t,"].direction")]=e.direction})),a.lighting_uDirectionalLightCount=i.length,a}var E={name:"pbr",vs:"uniform mat4 u_MVPMatrix;\nuniform mat4 u_ModelMatrix;\nuniform mat4 u_NormalMatrix;\n\nvarying vec3 pbr_vPosition;\nvarying vec2 pbr_vUV;\n\n#ifdef HAS_NORMALS\n# ifdef HAS_TANGENTS\nvarying mat3 pbr_vTBN;\n# else\nvarying vec3 pbr_vNormal;\n# endif\n#endif\n\nvoid pbr_setPositionNormalTangentUV(vec4 position, vec4 normal, vec4 tangent, vec2 uv)\n{\n  vec4 pos = u_ModelMatrix * position;\n  pbr_vPosition = vec3(pos.xyz) / pos.w;\n\n#ifdef HAS_NORMALS\n#ifdef HAS_TANGENTS\n  vec3 normalW = normalize(vec3(u_NormalMatrix * vec4(normal.xyz, 0.0)));\n  vec3 tangentW = normalize(vec3(u_ModelMatrix * vec4(tangent.xyz, 0.0)));\n  vec3 bitangentW = cross(normalW, tangentW) * tangent.w;\n  pbr_vTBN = mat3(tangentW, bitangentW, normalW);\n#else\n  pbr_vNormal = normalize(vec3(u_ModelMatrix * vec4(normal.xyz, 0.0)));\n#endif\n#endif\n\n#ifdef HAS_UV\n  pbr_vUV = uv;\n#else\n  pbr_vUV = vec2(0.,0.);\n#endif\n}\n",fs:"#if (__VERSION__ < 300)\n#extension GL_EXT_shader_texture_lod: enable\n#extension GL_OES_standard_derivatives : enable\n#endif\n\n\n#if (__VERSION__ < 300)\n  #define SMART_FOR(INIT, WEBGL1COND, WEBGL2COND, INCR) for (INIT; WEBGL1COND; INCR)\n#else\n  #define SMART_FOR(INIT, WEBGL1COND, WEBGL2COND, INCR) for (INIT; WEBGL2COND; INCR)\n#endif\n\nprecision highp float;\n\n#ifdef USE_IBL\nuniform samplerCube u_DiffuseEnvSampler;\nuniform samplerCube u_SpecularEnvSampler;\nuniform sampler2D u_brdfLUT;\nuniform vec2 u_ScaleIBLAmbient;\n#endif\n\n#ifdef HAS_BASECOLORMAP\nuniform sampler2D u_BaseColorSampler;\n#endif\n#ifdef HAS_NORMALMAP\nuniform sampler2D u_NormalSampler;\nuniform float u_NormalScale;\n#endif\n#ifdef HAS_EMISSIVEMAP\nuniform sampler2D u_EmissiveSampler;\nuniform vec3 u_EmissiveFactor;\n#endif\n#ifdef HAS_METALROUGHNESSMAP\nuniform sampler2D u_MetallicRoughnessSampler;\n#endif\n#ifdef HAS_OCCLUSIONMAP\nuniform sampler2D u_OcclusionSampler;\nuniform float u_OcclusionStrength;\n#endif\n\n#ifdef ALPHA_CUTOFF\nuniform float u_AlphaCutoff;\n#endif\n\nuniform vec2 u_MetallicRoughnessValues;\nuniform vec4 u_BaseColorFactor;\n\nuniform vec3 u_Camera;\n#ifdef PBR_DEBUG\nuniform vec4 u_ScaleDiffBaseMR;\nuniform vec4 u_ScaleFGDSpec;\n#endif\n\nvarying vec3 pbr_vPosition;\n\nvarying vec2 pbr_vUV;\n\n#ifdef HAS_NORMALS\n#ifdef HAS_TANGENTS\nvarying mat3 pbr_vTBN;\n#else\nvarying vec3 pbr_vNormal;\n#endif\n#endif\n\n\nstruct PBRInfo\n{\n  float NdotL;\n  float NdotV;\n  float NdotH;\n  float LdotH;\n  float VdotH;\n  float perceptualRoughness;\n  float metalness;\n  vec3 reflectance0;\n  vec3 reflectance90;\n  float alphaRoughness;\n  vec3 diffuseColor;\n  vec3 specularColor;\n  vec3 n;\n  vec3 v;\n};\n\nconst float M_PI = 3.141592653589793;\nconst float c_MinRoughness = 0.04;\n\nvec4 SRGBtoLINEAR(vec4 srgbIn)\n{\n#ifdef MANUAL_SRGB\n#ifdef SRGB_FAST_APPROXIMATION\n  vec3 linOut = pow(srgbIn.xyz,vec3(2.2));\n#else\n  vec3 bLess = step(vec3(0.04045),srgbIn.xyz);\n  vec3 linOut = mix( srgbIn.xyz/vec3(12.92), pow((srgbIn.xyz+vec3(0.055))/vec3(1.055),vec3(2.4)), bLess );\n#endif\n  return vec4(linOut,srgbIn.w);;\n#else\n  return srgbIn;\n#endif\n}\n\nvec3 getNormal()\n{\n#ifndef HAS_TANGENTS\n  vec3 pos_dx = dFdx(pbr_vPosition);\n  vec3 pos_dy = dFdy(pbr_vPosition);\n  vec3 tex_dx = dFdx(vec3(pbr_vUV, 0.0));\n  vec3 tex_dy = dFdy(vec3(pbr_vUV, 0.0));\n  vec3 t = (tex_dy.t * pos_dx - tex_dx.t * pos_dy) / (tex_dx.s * tex_dy.t - tex_dy.s * tex_dx.t);\n\n#ifdef HAS_NORMALS\n  vec3 ng = normalize(pbr_vNormal);\n#else\n  vec3 ng = cross(pos_dx, pos_dy);\n#endif\n\n  t = normalize(t - ng * dot(ng, t));\n  vec3 b = normalize(cross(ng, t));\n  mat3 tbn = mat3(t, b, ng);\n#else\n  mat3 tbn = pbr_vTBN;\n#endif\n\n#ifdef HAS_NORMALMAP\n  vec3 n = texture2D(u_NormalSampler, pbr_vUV).rgb;\n  n = normalize(tbn * ((2.0 * n - 1.0) * vec3(u_NormalScale, u_NormalScale, 1.0)));\n#else\n  vec3 n = normalize(tbn[2].xyz);\n#endif\n\n  return n;\n}\n\n\n#ifdef USE_IBL\nvec3 getIBLContribution(PBRInfo pbrInputs, vec3 n, vec3 reflection)\n{\n  float mipCount = 9.0;\n  float lod = (pbrInputs.perceptualRoughness * mipCount);\n  vec3 brdf = SRGBtoLINEAR(texture2D(u_brdfLUT,\n    vec2(pbrInputs.NdotV, 1.0 - pbrInputs.perceptualRoughness))).rgb;\n  vec3 diffuseLight = SRGBtoLINEAR(textureCube(u_DiffuseEnvSampler, n)).rgb;\n\n#ifdef USE_TEX_LOD\n  vec3 specularLight = SRGBtoLINEAR(textureCubeLodEXT(u_SpecularEnvSampler, reflection, lod)).rgb;\n#else\n  vec3 specularLight = SRGBtoLINEAR(textureCube(u_SpecularEnvSampler, reflection)).rgb;\n#endif\n\n  vec3 diffuse = diffuseLight * pbrInputs.diffuseColor;\n  vec3 specular = specularLight * (pbrInputs.specularColor * brdf.x + brdf.y);\n  diffuse *= u_ScaleIBLAmbient.x;\n  specular *= u_ScaleIBLAmbient.y;\n\n  return diffuse + specular;\n}\n#endif\n\n\nvec3 diffuse(PBRInfo pbrInputs)\n{\n  return pbrInputs.diffuseColor / M_PI;\n}\n\nvec3 specularReflection(PBRInfo pbrInputs)\n{\n  return pbrInputs.reflectance0 +\n    (pbrInputs.reflectance90 - pbrInputs.reflectance0) *\n    pow(clamp(1.0 - pbrInputs.VdotH, 0.0, 1.0), 5.0);\n}\n\n\n\nfloat geometricOcclusion(PBRInfo pbrInputs)\n{\n  float NdotL = pbrInputs.NdotL;\n  float NdotV = pbrInputs.NdotV;\n  float r = pbrInputs.alphaRoughness;\n\n  float attenuationL = 2.0 * NdotL / (NdotL + sqrt(r * r + (1.0 - r * r) * (NdotL * NdotL)));\n  float attenuationV = 2.0 * NdotV / (NdotV + sqrt(r * r + (1.0 - r * r) * (NdotV * NdotV)));\n  return attenuationL * attenuationV;\n}\n\n\n\n\n\nfloat microfacetDistribution(PBRInfo pbrInputs)\n{\n  float roughnessSq = pbrInputs.alphaRoughness * pbrInputs.alphaRoughness;\n  float f = (pbrInputs.NdotH * roughnessSq - pbrInputs.NdotH) * pbrInputs.NdotH + 1.0;\n  return roughnessSq / (M_PI * f * f);\n}\n\nvoid PBRInfo_setAmbientLight(inout PBRInfo pbrInputs) {\n  pbrInputs.NdotL = 1.0;\n  pbrInputs.NdotH = 0.0;\n  pbrInputs.LdotH = 0.0;\n  pbrInputs.VdotH = 1.0;\n}\n\nvoid PBRInfo_setDirectionalLight(inout PBRInfo pbrInputs, vec3 lightDirection) {\n  vec3 n = pbrInputs.n;\n  vec3 v = pbrInputs.v;\n  vec3 l = normalize(lightDirection);\n  vec3 h = normalize(l+v);\n\n  pbrInputs.NdotL = clamp(dot(n, l), 0.001, 1.0);\n  pbrInputs.NdotH = clamp(dot(n, h), 0.0, 1.0);\n  pbrInputs.LdotH = clamp(dot(l, h), 0.0, 1.0);\n  pbrInputs.VdotH = clamp(dot(v, h), 0.0, 1.0);\n}\n\nvoid PBRInfo_setPointLight(inout PBRInfo pbrInputs, PointLight pointLight) {\n  vec3 light_direction = normalize(pointLight.position - pbr_vPosition);\n  PBRInfo_setDirectionalLight(pbrInputs, light_direction);\n}\n\nvec3 calculateFinalColor(PBRInfo pbrInputs, vec3 lightColor) {\n  vec3 F = specularReflection(pbrInputs);\n  float G = geometricOcclusion(pbrInputs);\n  float D = microfacetDistribution(pbrInputs);\n  vec3 diffuseContrib = (1.0 - F) * diffuse(pbrInputs);\n  vec3 specContrib = F * G * D / (4.0 * pbrInputs.NdotL * pbrInputs.NdotV);\n  return pbrInputs.NdotL * lightColor * (diffuseContrib + specContrib);\n}\n\nvec4 pbr_filterColor(vec4 colorUnused)\n{\n\n\n  float perceptualRoughness = u_MetallicRoughnessValues.y;\n  float metallic = u_MetallicRoughnessValues.x;\n#ifdef HAS_METALROUGHNESSMAP\n\n  vec4 mrSample = texture2D(u_MetallicRoughnessSampler, pbr_vUV);\n  perceptualRoughness = mrSample.g * perceptualRoughness;\n  metallic = mrSample.b * metallic;\n#endif\n  perceptualRoughness = clamp(perceptualRoughness, c_MinRoughness, 1.0);\n  metallic = clamp(metallic, 0.0, 1.0);\n\n  float alphaRoughness = perceptualRoughness * perceptualRoughness;\n#ifdef HAS_BASECOLORMAP\n  vec4 baseColor = SRGBtoLINEAR(texture2D(u_BaseColorSampler, pbr_vUV)) * u_BaseColorFactor;\n#else\n  vec4 baseColor = u_BaseColorFactor;\n#endif\n\n#ifdef ALPHA_CUTOFF\n  if (baseColor.a < u_AlphaCutoff) {\n    discard;\n  }\n#endif\n\n  vec3 f0 = vec3(0.04);\n  vec3 diffuseColor = baseColor.rgb * (vec3(1.0) - f0);\n  diffuseColor *= 1.0 - metallic;\n  vec3 specularColor = mix(f0, baseColor.rgb, metallic);\n  float reflectance = max(max(specularColor.r, specularColor.g), specularColor.b);\n\n\n\n  float reflectance90 = clamp(reflectance * 25.0, 0.0, 1.0);\n  vec3 specularEnvironmentR0 = specularColor.rgb;\n  vec3 specularEnvironmentR90 = vec3(1.0, 1.0, 1.0) * reflectance90;\n\n  vec3 n = getNormal();\n  vec3 v = normalize(u_Camera - pbr_vPosition);\n\n  float NdotV = clamp(abs(dot(n, v)), 0.001, 1.0);\n  vec3 reflection = -normalize(reflect(v, n));\n\n  PBRInfo pbrInputs = PBRInfo(\n    0.0,\n    NdotV,\n    0.0,\n    0.0,\n    0.0,\n    perceptualRoughness,\n    metallic,\n    specularEnvironmentR0,\n    specularEnvironmentR90,\n    alphaRoughness,\n    diffuseColor,\n    specularColor,\n    n,\n    v\n  );\n\n  vec3 color = vec3(0, 0, 0);\n\n#ifdef USE_LIGHTS\n  PBRInfo_setAmbientLight(pbrInputs);\n  color += calculateFinalColor(pbrInputs, lighting_uAmbientLight.color);\n  SMART_FOR(int i = 0, i < MAX_LIGHTS, i < lighting_uDirectionalLightCount, i++) {\n    if (i < lighting_uDirectionalLightCount) {\n      PBRInfo_setDirectionalLight(pbrInputs, lighting_uDirectionalLight[i].direction);\n      color += calculateFinalColor(pbrInputs, lighting_uDirectionalLight[i].color);\n    }\n  }\n  SMART_FOR(int i = 0, i < MAX_LIGHTS, i < lighting_uPointLightCount, i++) {\n    if (i < lighting_uPointLightCount) {\n      PBRInfo_setPointLight(pbrInputs, lighting_uPointLight[i]);\n      float attenuation = getPointLightAttenuation(lighting_uPointLight[i], distance(lighting_uPointLight[i].position, pbr_vPosition));\n      color += calculateFinalColor(pbrInputs, lighting_uPointLight[i].color / attenuation);\n    }\n  }\n#endif\n#ifdef USE_IBL\n  color += getIBLContribution(pbrInputs, n, reflection);\n#endif\n#ifdef HAS_OCCLUSIONMAP\n  float ao = texture2D(u_OcclusionSampler, pbr_vUV).r;\n  color = mix(color, color * ao, u_OcclusionStrength);\n#endif\n\n#ifdef HAS_EMISSIVEMAP\n  vec3 emissive = SRGBtoLINEAR(texture2D(u_EmissiveSampler, pbr_vUV)).rgb * u_EmissiveFactor;\n  color += emissive;\n#endif\n\n#ifdef PBR_DEBUG\n\n\n\n\n\n  color = mix(color, baseColor.rgb, u_ScaleDiffBaseMR.y);\n  color = mix(color, vec3(metallic), u_ScaleDiffBaseMR.z);\n  color = mix(color, vec3(perceptualRoughness), u_ScaleDiffBaseMR.w);\n#endif\n\n  return vec4(pow(color,vec3(1.0/2.2)), baseColor.a);\n}\n",defines:{LIGHTING_FRAGMENT:1},dependencies:[L]},R=n("ykdB"),A=n("d3kR"),M=n("tMmZ"),N=n("f5Sf"),T=n("iein");function w(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function D(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?w(Object(n),!0).forEach((function(t){Object(l.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):w(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var j=function(){function e(e,t){var n=t.attributes,r=t.material,o=t.pbrDebug,i=t.imageBasedLightingEnvironment,a=t.lights,s=t.useTangents;this.gl=e,this.defines={MANUAL_SRGB:1,SRGB_FAST_APPROXIMATION:1},Object(A.b)(e,M.a.GLSL_TEXTURE_LOD)&&(this.defines.USE_TEX_LOD=1),this.uniforms={u_Camera:[0,0,0],u_MetallicRoughnessValues:[1,1]},this.parameters={},this.generatedTextures=[],i&&(this.uniforms.u_DiffuseEnvSampler=i.getDiffuseEnvSampler(),this.uniforms.u_SpecularEnvSampler=i.getSpecularEnvSampler(),this.uniforms.u_brdfLUT=i.getBrdfTexture(),this.uniforms.u_ScaleIBLAmbient=[1,1]),o&&(this.uniforms.u_ScaleDiffBaseMR=[0,0,0,0],this.uniforms.u_ScaleFGDSpec=[0,0,0,0]),this.defineIfPresent(n.NORMAL,"HAS_NORMALS"),this.defineIfPresent(n.TANGENT&&s,"HAS_TANGENTS"),this.defineIfPresent(n.TEXCOORD_0,"HAS_UV"),this.defineIfPresent(i,"USE_IBL"),this.defineIfPresent(a,"USE_LIGHTS"),this.defineIfPresent(o,"PBR_DEBUG"),r&&this.parseMaterial(r)}var t=e.prototype;return t.defineIfPresent=function(e,t){e&&(this.defines[t]=1)},t.parseTexture=function(e,t,n){var r;void 0===n&&(n=null);var o,i,a=e.texture&&e.texture.sampler&&e.texture.sampler.parameters||{},s=e.texture.source.image,l={};s.compressed?(o=s,(i={})[this.gl.TEXTURE_MIN_FILTER]=s.data.length>1?this.gl.LINEAR_MIPMAP_NEAREST:this.gl.LINEAR,l=i):o={data:s};var c=new N.a(this.gl,D({id:e.name||e.id,parameters:D(D({},a),l),pixelStore:(r={},r[this.gl.UNPACK_FLIP_Y_WEBGL]=!1,r)},o));this.uniforms[t]=c,this.defineIfPresent(n,n),this.generatedTextures.push(c)},t.parsePbrMetallicRoughness=function(e){e.baseColorTexture&&this.parseTexture(e.baseColorTexture,"u_BaseColorSampler","HAS_BASECOLORMAP"),this.uniforms.u_BaseColorFactor=e.baseColorFactor||[1,1,1,1],e.metallicRoughnessTexture&&this.parseTexture(e.metallicRoughnessTexture,"u_MetallicRoughnessSampler","HAS_METALROUGHNESSMAP");var t=e.metallicFactor,n=void 0===t?1:t,r=e.roughnessFactor,o=void 0===r?1:r;this.uniforms.u_MetallicRoughnessValues=[n,o]},t.parseMaterial=function(e){if(this.uniforms.pbr_uUnlit=Boolean(e.unlit),e.pbrMetallicRoughness&&this.parsePbrMetallicRoughness(e.pbrMetallicRoughness),e.normalTexture){this.parseTexture(e.normalTexture,"u_NormalSampler","HAS_NORMALMAP");var t=e.normalTexture.scale,n=void 0===t?1:t;this.uniforms.u_NormalScale=n}if(e.occlusionTexture){this.parseTexture(e.occlusionTexture,"u_OcclusionSampler","HAS_OCCLUSIONMAP");var r=e.occlusionTexture.strength,o=void 0===r?1:r;this.uniforms.u_OcclusionStrength=o}if(e.emissiveTexture&&(this.parseTexture(e.emissiveTexture,"u_EmissiveSampler","HAS_EMISSIVEMAP"),this.uniforms.u_EmissiveFactor=e.emissiveFactor||[0,0,0]),"MASK"===e.alphaMode){var i=e.alphaCutoff,a=void 0===i?.5:i;this.defines.ALPHA_CUTOFF=1,this.uniforms.u_AlphaCutoff=a}else"BLEND"===e.alphaMode&&(T.j.warn("BLEND alphaMode might not work well because it requires mesh sorting")(),Object.assign(this.parameters,{blend:!0,blendEquation:this.gl.FUNC_ADD,blendFunc:[this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA,this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA]}))},e}();n("rpwb");Math.PI,new Float32Array(16),new Float32Array(12);function B(e,t){return t===_.a.CARTESIAN||t===_.a.METER_OFFSETS||t===_.a.DEFAULT&&!e.isGeospatial}function F(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function U(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?F(Object(n),!0).forEach((function(t){Object(l.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):F(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function H(e,t){(e.COLOR_0||e.colors)&&t||(e.colors={constant:!0,value:new Float32Array([1,1,1])}),y.a.assert(e.positions||e.POSITION,'no "postions" or "POSITION" attribute in mesh')}function k(e,t){if(e.attributes)return H(e.attributes,t),e instanceof b.a?e:new b.a(e);if(e.positions||e.POSITION)return H(e,t),new b.a({attributes:e});throw Error("Invalid mesh")}var G=function(e){function t(){return e.apply(this,arguments)||this}Object(s.a)(t,e);var n=t.prototype;return n.getShaders=function(){var t=e.prototype.getShaders.call(this),n=t.modules;return this.props.material&&n.push(E),U(U({},t),{},{vs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-vs\n\n// Scale the model\nuniform float sizeScale;\nuniform bool composeModelMatrix;\n\n// Primitive attributes\nin vec3 positions;\nin vec3 normals;\nin vec3 colors;\nin vec2 texCoords;\nin vec3 pickingColors;\n\n// Instance attributes\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin mat3 instanceModelMatrix;\nin vec3 instanceTranslation;\n\n// Outputs to fragment shader\nout vec2 vTexCoord;\nout vec3 cameraPosition;\nout vec3 normals_commonspace;\nout vec4 position_commonspace;\nout vec4 vColor;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = texCoords;\n  geometry.pickingColor = pickingColors;\n\n  #ifdef MODULE_PBR\n    // set PBR data\n    #ifdef HAS_NORMALS\n      pbr_vNormal = project_normal(instanceModelMatrix * normals);\n      geometry.normal = pbr_vNormal;\n    #endif\n\n    #ifdef HAS_UV\n      pbr_vUV = texCoords;\n    #else\n      pbr_vUV = vec2(0., 0.);\n    #endif\n    geometry.uv = pbr_vUV;\n  #endif\n\n  vTexCoord = texCoords;\n  cameraPosition = project_uCameraPosition;\n  normals_commonspace = project_normal(instanceModelMatrix * normals);\n  vColor = vec4(colors * instanceColors.rgb, instanceColors.a);\n  geometry.normal = normals_commonspace;\n\n  vec3 pos = (instanceModelMatrix * positions) * sizeScale + instanceTranslation;\n\n  if (composeModelMatrix) {\n    DECKGL_FILTER_SIZE(pos, geometry);\n    gl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), position_commonspace);\n  }\n  else {\n    pos = project_size(pos);\n    DECKGL_FILTER_SIZE(pos, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, position_commonspace);\n  }\n\n  geometry.position = position_commonspace;\n\n  #ifdef MODULE_PBR\n    // set PBR data\n    pbr_vPosition = geometry.position.xyz;\n  #endif\n\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-fs\n\nprecision highp float;\n\nuniform bool hasTexture;\nuniform sampler2D sampler;\nuniform bool flatShading;\nuniform float opacity;\n\nin vec2 vTexCoord;\nin vec3 cameraPosition;\nin vec3 normals_commonspace;\nin vec4 position_commonspace;\nin vec4 vColor;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  \n#ifdef MODULE_PBR\n\n  fragColor = vColor * pbr_filterColor(vec4(0));\n  geometry.uv = pbr_vUV;\n  fragColor.a *= opacity;\n\n#else\n\n  geometry.uv = vTexCoord;\n\n  vec3 normal;\n  if (flatShading) {\n\n// NOTE(Tarek): This is necessary because\n// headless.gl reports the extension as\n// available but does not support it in\n// the shader.\n#ifdef DERIVATIVES_AVAILABLE\n    normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n#else\n    normal = vec3(0.0, 0.0, 1.0);\n#endif\n  } else {\n    normal = normals_commonspace;\n  }\n\n  vec4 color = hasTexture ? texture(sampler, vTexCoord) : vColor;\n  vec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);\n  fragColor = vec4(lightColor, color.a * opacity);\n\n#endif\n\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n}\n"})},n.initializeState=function(){e.prototype.initializeState.call(this),this.state.attributeManager.add({pickingColors:{type:v.a.UNSIGNED_BYTE,size:3,noAlloc:!0,update:this.calculatePickingColors}})},n.draw=function(e){var t=e.uniforms;if(this.state.model){var n=this.context.viewport,r=this.props,o=r.sizeScale,i=r.coordinateSystem,a=r._instanced;this.state.model.draw({uniforms:Object.assign({},t,{sizeScale:o,composeModelMatrix:!a||B(n,i),flatShading:!this.state.hasNormals,u_Camera:this.state.model.getUniforms().project_uCameraPosition})})}},n.getModel=function(e){var t,n,r=null;if(this.props.material){var o=this.props.material,i=Boolean(o.pbrMetallicRoughness&&o.pbrMetallicRoughness.baseColorTexture);r=new j(this.context.gl,{attributes:{NORMAL:e.attributes.normals,TEXCOORD_0:e.attributes.texCoords},material:U({unlit:i},o),pbrDebug:!1,imageBasedLightingEnvironment:null,lights:!0,useTangents:!1})}var a=new R.a(this.context.gl,Object.assign({},this.getShaders(),{id:this.props.id,geometry:k(e,!0),defines:null===(t=r)||void 0===t?void 0:t.defines,parameters:null===(n=r)||void 0===n?void 0:n.parameters,isInstanced:!0})),s=this.props.texture,l=this.state.emptyTexture;return r?a.setUniforms(r.uniforms):a.setUniforms({sampler:s||l,hasTexture:Boolean(s)}),a},n.setTexture=function(e){if(!this.props.material){var t=this.state,n=t.emptyTexture,r=t.model;r&&r.setUniforms({sampler:e||n,hasTexture:Boolean(e)})}},n.calculatePickingColors=function(e){for(var t=this.props.mesh.attributes.featureIds.value,n=new Uint8ClampedArray(t.length*e.size),r=0;r<t.length;r++){var o=this.encodePickingColor(t[r]);n[3*r]=o[0],n[3*r+1]=o[1],n[3*r+2]=o[2]}e.value=n},t}(I.a);function V(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function z(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?V(Object(n),!0).forEach((function(t){Object(l.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):V(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}G.layerName="MeshLayer";var W=[0],X=function(e){function t(){return e.apply(this,arguments)||this}return Object(s.a)(t,e),t.prototype._makeSimpleMeshLayer=function(e,t){var n=e.content,r=n.attributes,o=n.modelMatrix,i=n.cartographicOrigin,a=n.texture,s=n.material,l=this.props,c=l.pickable,u=l.autoHighlight,p=t&&t.props.mesh||new b.a({drawMode:v.a.TRIANGLES,attributes:q(r)});return new G(this.getSubLayerProps({id:"mesh"}),{id:this.id+"-mesh-"+e.id,mesh:p,data:W,getPosition:[0,0,0],getColor:[255,255,255],texture:a,material:s,modelMatrix:o,coordinateOrigin:i,coordinateSystem:_.a.METER_OFFSETS,pickable:c,autoHighlight:u,highlightColor:[0,0,255,150]})},t}(S.a);function q(e){var t={};return t.positions=z(z({},e.positions),{},{value:new Float32Array(e.positions.value)}),e.normals&&(t.normals=e.normals),e.texCoords&&(t.texCoords=e.texCoords),e.colors&&(t.colors=e.colors),e.featureIds&&(t.featureIds=e.featureIds),t}var Y=n("lese"),K=n("VBSM"),Z=n("J4mz");function J(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Q(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?J(Object(n),!0).forEach((function(t){Object(l.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):J(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var $={height:600,width:800,pitch:45,maxPitch:60,bearing:0,minZoom:2,maxZoom:30,zoom:14.5},ee={"San Francisco":{name:"San Francisco",url:"https://tiles.arcgis.com/tiles/z2tnIkrLQ2BRzr6P/arcgis/rest/services/SanFrancisco_Bldgs/SceneServer/layers/0",viewport:Q(Q({},$),{},{longitude:-120,latitude:34})},"San Francisco v1.7":{name:"San Francisco v1.7",url:"https://tiles.arcgis.com/tiles/z2tnIkrLQ2BRzr6P/arcgis/rest/services/SanFrancisco_3DObjects_1_7/SceneServer/layers/0",viewport:Q(Q({},$),{},{longitude:-120,latitude:34})},"New York":{name:"New York",url:"https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_NewYork_17/SceneServer/layers/0",viewport:Q(Q({},$),{},{longitude:-74,latitude:40})}},te=n("vOnD"),ne={"Base Map: Satellite":"https://basemaps.cartocdn.com/gl/voyager-nolabels-gl-style/style.json","Base Map: Light":"https://basemaps.cartocdn.com/gl/positron-nolabels-gl-style/style.json","Base Map: Dark":"https://basemaps.cartocdn.com/gl/dark-matter-nolabels-gl-style/style.json"},re=ne["Base Map: Dark"],oe=te.c.div.withConfig({displayName:"control-panel__Container",componentId:"sc-14q5t5u-0"})(["display:flex;flex-direction:column;position:absolute;top:0;right:0;width:300px;background:#fff;box-shadow:0 2px 4px rgba(0,0,0,0.3);padding:12px 18px;margin:20px;font-size:13px;line-height:2;outline:none;z-index:100;"]),ie=te.c.select.withConfig({displayName:"control-panel__DropDown",componentId:"sc-14q5t5u-1"})(["margin-bottom:12px;"]),ae=te.c.select.withConfig({displayName:"control-panel__TilesetDropDown",componentId:"sc-14q5t5u-2"})(["margin-bottom:12px;font-weight:800;font-size:16px;"]),se=te.c.div.withConfig({displayName:"control-panel__FrameWrap",componentId:"sc-14q5t5u-3"})(["height:fit-content;padding:0;overflow:hidden;"]),le=te.c.div.withConfig({displayName:"control-panel__FrameControl",componentId:"sc-14q5t5u-4"})(["margin:",";display:flex;flex-direction:row;align-items:center;justify-content:space-between;width:100%;"],(function(e){return e.showFullInfo?"12px 0":0})),ce=te.c.div.withConfig({displayName:"control-panel__FrameButton",componentId:"sc-14q5t5u-5"})(["display:flex;padding:6px 12px;color:white;background:rgb(52,152,219);align-items:center;height:20px;&:hover{background:rgb(0,152,219);cursor:pointer;}"]),ue=function(e){function t(t){var n;return(n=e.call(this,t)||this)._renderMapStyles=n._renderMapStyles.bind(Object(a.a)(n)),n.state={showFullInfo:!1},n}Object(s.a)(t,e);var n=t.prototype;return n._renderExamples=function(){var e=this,t=this.props,n=t.name,r=t.onExampleChange,o=n||"Custom example";return u.a.createElement(ae,{value:o,onChange:function(t){var n=t.target.value;e.setState({selected:n}),r(ee[n])}},!n&&u.a.createElement("option",{key:"custom-example",value:"custom-example"},"Custom example"),Object.keys(ee).map((function(e){var t=ee[e];return u.a.createElement("option",{key:e,value:t.name},t.name)})))},n._renderMapStyles=function(){var e=this.props,t=e.mapStyles,n=void 0===t?ne:t,r=e.selectedMapStyle,o=e.onMapStyleChange;return u.a.createElement(ie,{value:r,onChange:function(e){var t=e.target.value;o({selectedMapStyle:t})}},Object.keys(n).map((function(e){return u.a.createElement("option",{key:e,value:n[e]},e)})))},n._renderInfo=function(){var e=this,t=this.props,n=t.metadata,r=t.token,o=this.state.showFullInfo;if(!n)return null;var i="https://www.arcgis.com/home/item.html?id="+n.serviceItemId;return r&&(i=i+"&token="+r),u.a.createElement(se,null,u.a.createElement("iframe",{id:"tileset-info",title:"tileset-info",style:{display:o?"inherit":"none",height:500,width:"99%",border:"1px solid rgba(200, 200, 200, 100)"},src:i}),u.a.createElement(le,{showFullInfo:o},u.a.createElement(ce,{onClick:function(){return e.setState({showFullInfo:!o})}},"Show ",o?"Less":"More"),u.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:i},"Go to ArcGIS")))},n.render=function(){return u.a.createElement(oe,null,this._renderExamples(),this._renderMapStyles(),this._renderInfo(),this.props.children)},t}(c.PureComponent);ue.defaultProps={droppedFile:null,onChange:function(){}};var pe={display:"flex",position:"absolute",backgroundColor:"white",flexFlow:"column",top:0,right:0,width:"300px",padding:"12px 18px",maxHeight:"80%",margin:"20px",zIndex:1e3},fe={width:"50%",textAlign:"left",borderRight:"3px solid rgba(0,0,0,.05)",padding:".5em .7em"},de={width:"50%",padding:".5em .7em"},me={maxHeight:"50%",overflowY:"auto"},he={display:"flex",flexFlow:"row nowrap",justifyContent:"space-between",alignItems:"center"},ge={height:"30px",color:"#6e6e6e",border:"none",cursor:"pointer",outline:"none",fontSize:"19px"},ve=function(e){function t(){return e.apply(this,arguments)||this}Object(s.a)(t,e);var n=t.prototype;return n.prepareTable=function(){var e=this.props.attributesObject,t=[];for(var n in e){var r=this.formatValue(e[n]),o=this.createTableColumn(n,r);t.push(o)}return u.a.createElement("div",{style:me},u.a.createElement("table",null,u.a.createElement("tbody",null,t)))},n.createTableColumn=function(e,t){return u.a.createElement("tr",{key:e},u.a.createElement("th",{style:fe},e),u.a.createElement("td",{style:de},t))},n.formatValue=function(e){return e.toString().replace(/[{}']+/g,"").trim()||"No Data"},n.render=function(){var e=this.props,t=e.attributesObject,n=e.handleClosePanel,r=e.attributesHeader;return u.a.createElement("div",{style:pe},u.a.createElement("div",{style:he},u.a.createElement("h2",null,t[r]),u.a.createElement("button",{style:ge,onClick:n},"X")),t&&this.prepareTable())},t}(c.PureComponent);function be(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function _e(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?be(Object(n),!0).forEach((function(t){Object(l.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):be(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}ve.defaultProps={attributesObject:{},attributesHeader:"NAME",handleClosePanel:function(){}};var Se={longitude:-120,latitude:34,height:600,width:800,pitch:45,maxPitch:60,bearing:0,minZoom:2,maxZoom:30,zoom:14.5},ye={wordBreak:"break-word",position:"absolute",padding:12,zIndex:"10000",maxWidth:300,background:"#000",color:"#fff"},Ie={textAlign:"left"},Oe={color:"#fff"};function Le(e,t){var n=new URL(e),r=t&&t.token,o=e.includes("layers/0")?e:e.replace(/\/?$/,"/").concat("layers/0"),i=o.lastIndexOf("/layers/0"),a=o.substring(0,i);return n.search&&(r=n.searchParams.get("token"),a=""+a+n.search),_e(_e({},t),{},{tilesetUrl:o,token:r,metadataUrl:a})}var Pe=function(e){function t(t){var n;return(n=e.call(this,t)||this)._tilesetStatsWidget=null,n.state={url:null,token:null,name:"San Francisco",viewState:Se,selectedMapStyle:re,selectedFeatureAttributes:null,selectedFeatureIndex:-1},n._onSelectTileset=n._onSelectTileset.bind(Object(a.a)(n)),n.handleClosePanel=n.handleClosePanel.bind(Object(a.a)(n)),n}Object(s.a)(t,e);var n=t.prototype;return n.componentDidMount=function(){var e;this._memWidget=new Z.a(d.a.get("Memory Usage"),{framesPerUpdate:1,formatters:{"GPU Memory":"memory","Buffer Memory":"memory","Renderbuffer Memory":"memory","Texture Memory":"memory"},container:this._statsWidgetContainer}),this._tilesetStatsWidget=new Z.a(null,{container:this._statsWidgetContainer});var t=new URL(window.location.href).searchParams.get("url");e=t?{url:t}:ee["San Francisco"],this._onSelectTileset(e)},n._onSelectTileset=function(){var e=Object(i.a)(o.a.mark((function e(t){var n,r,i,a,s,l;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=Le(t.url,t),r=n.tilesetUrl,i=n.token,a=n.name,s=n.metadataUrl,this.setState({tilesetUrl:r,name:a,token:i}),e.next=5,fetch(s).then((function(e){return e.json()}));case 5:l=e.sent,this.setState({metadata:l,selectedFeatureAttributes:null});case 7:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),n._updateStatWidgets=function(){this._memWidget.update(),this._tilesetStatsWidget.update()},n._onTilesetLoad=function(e){var t=e.zoom,n=e.cartographicCenter,r=n[0],o=n[1],i=_e(_e({},this.state.viewState),{},{zoom:t+2.5,longitude:r,latitude:o});this.setState({tileset:e,viewState:_e(_e({},i),{},{transitionDuration:4e3,transitionInterpolator:new h.a})}),this._tilesetStatsWidget.setStats(e.stats)},n._onViewStateChange=function(e){var t=e.viewState;this.setState({viewState:t})},n._onSelectMapStyle=function(e){var t=e.selectedMapStyle;this.setState({selectedMapStyle:t})},n._renderLayers=function(){var e=this,t=this.state,n=t.tilesetUrl,r=t.token,o=t.selectedFeatureIndex,i={throttleRequests:!0,loadFeatureAttributes:!0};return r&&(i.token=r),[new X({data:n,loader:Y.a,onTilesetLoad:this._onTilesetLoad.bind(this),onTileLoad:function(){return e._updateStatWidgets()},onTileUnload:function(){return e._updateStatWidgets()},pickable:!0,loadOptions:i,highlightedObjectIndex:o})]},n.handleClick=function(e){if(!e.object||e.index<0||!e.layer)this.handleClosePanel();else{var t=Object(K.b)(e.object,e.index);this.setState({selectedFeatureAttributes:t,selectedFeatureIndex:e.index})}},n._renderStats=function(){var e=this;return u.a.createElement("div",{style:ye,ref:function(t){return e._statsWidgetContainer=t}})},n._renderControlPanel=function(){var e=this.state,t=e.name,n=e.tileset,r=e.token,o=e.metadata,i=e.selectedMapStyle;return u.a.createElement(ue,{tileset:n,name:t,metadata:o,token:r,onExampleChange:this._onSelectTileset,onMapStyleChange:this._onSelectMapStyle.bind(this),selectedMapStyle:i})},n.getTooltip=function(e){if(!e.object||e.index<0||!e.layer)return null;var t=Object(K.b)(e.object,e.index);if(!t)return null;var n=document.createElement("div");return Object(p.render)(this.renderTooltip(t),n),{html:n.innerHTML}},n.renderTooltip=function(e){var t=[];for(var n in e){var r=u.a.createElement("tr",{key:n},u.a.createElement("th",{style:Ie},n),u.a.createElement("td",null,this.formatTooltipValue(e[n])));t.push(r)}return u.a.createElement("div",{style:Oe},u.a.createElement("table",null,u.a.createElement("tbody",null,t)))},n.formatTooltipValue=function(e){return e.toString().replace(/[{}']+/g,"").trim()||"No Data"},n.handleClosePanel=function(){this.setState({selectedFeatureAttributes:null,selectedFeatureIndex:-1})},n.renderAttributesPanel=function(){var e=this.state.selectedFeatureAttributes;return u.a.createElement(ve,{handleClosePanel:this.handleClosePanel,attributesObject:e})},n.render=function(){var e=this,t=this._renderLayers(),n=this.state,r=n.viewState,o=n.selectedMapStyle,i=n.selectedFeatureAttributes;return u.a.createElement("div",{style:{position:"relative",height:"100%"}},this._renderStats(),i?this.renderAttributesPanel():this._renderControlPanel(),u.a.createElement(m.a,{layers:t,viewState:r,onViewStateChange:this._onViewStateChange.bind(this),controller:{type:g.a,maxPitch:85},onAfterRender:function(){return e._updateStatWidgets()},getTooltip:function(t){return e.getTooltip(t)},onClick:function(t){return e.handleClick(t)}},u.a.createElement(f.a,{mapStyle:o,preventStyleDiffing:!0})))},t}(c.PureComponent);function Ce(e){Object(p.render)(u.a.createElement(Pe,null),e)}}}]);