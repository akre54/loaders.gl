(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"2Daz":function(e,t,n){"use strict";n.d(t,"i",(function(){return o})),n.d(t,"b",(function(){return i})),n.d(t,"e",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return u})),n.d(t,"g",(function(){return _})),n.d(t,"h",(function(){return l})),n.d(t,"f",(function(){return c})),n.d(t,"a",(function(){return E}));var r=n("Aabs"),o={UInt8:Uint8Array,UInt16:Uint16Array,UInt32:Uint32Array,Float32:Float32Array,UInt64:BigUint64Array},i={UInt8:r.a.UNSIGNED_BYTE,UInt16:r.a.UNSIGNED_INT,Float32:r.a.FLOAT,UInt32:r.a.UNSIGNED_INT,UInt64:r.a.DOUBLE},a={position:"position",normal:"normal",uv0:"uv0",color:"color",region:"region"},s={vertexAttributes:"vertexAttributes",featureAttributeOrder:"featureAttributeOrder",featureAttributes:"featureAttributes"},u={header:"header",vertexCount:"vertexCount",featureCount:"featureCount"},_={UInt8:1,UInt16:2,UInt32:4,Float32:4,UInt64:8},l="String",c="Oid32",E="Float64"},Aabs:function(e,t,n){"use strict";t.a={DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,FUNC_ADD:32774,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,BLEND_COLOR:32773,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,VENDOR:7936,RENDERER:7937,VERSION:7938,IMPLEMENTATION_COLOR_READ_TYPE:35738,IMPLEMENTATION_COLOR_READ_FORMAT:35739,BROWSER_DEFAULT_WEBGL:37444,STATIC_DRAW:35044,STREAM_DRAW:35040,DYNAMIC_DRAW:35048,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,CULL_FACE:2884,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,BLEND:3042,DEPTH_TEST:2929,DITHER:3024,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,SCISSOR_TEST:3089,STENCIL_TEST:2960,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CONTEXT_LOST_WEBGL:37442,CW:2304,CCW:2305,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DOUBLE:5130,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,COMPILE_STATUS:35713,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_ATTRIBUTES:35721,ACTIVE_UNIFORMS:35718,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,ALWAYS:519,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,GEQUAL:518,NOTEQUAL:517,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,TEXTURE_WIDTH:4096,TEXTURE_HEIGHT:4097,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,READ_FRAMEBUFFER:36008,DRAW_FRAMEBUFFER:36009,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,READ_BUFFER:3074,UNPACK_ROW_LENGTH:3314,UNPACK_SKIP_ROWS:3315,UNPACK_SKIP_PIXELS:3316,PACK_ROW_LENGTH:3330,PACK_SKIP_ROWS:3331,PACK_SKIP_PIXELS:3332,TEXTURE_BINDING_3D:32874,UNPACK_SKIP_IMAGES:32877,UNPACK_IMAGE_HEIGHT:32878,MAX_3D_TEXTURE_SIZE:32883,MAX_ELEMENTS_VERTICES:33e3,MAX_ELEMENTS_INDICES:33001,MAX_TEXTURE_LOD_BIAS:34045,MAX_FRAGMENT_UNIFORM_COMPONENTS:35657,MAX_VERTEX_UNIFORM_COMPONENTS:35658,MAX_ARRAY_TEXTURE_LAYERS:35071,MIN_PROGRAM_TEXEL_OFFSET:35076,MAX_PROGRAM_TEXEL_OFFSET:35077,MAX_VARYING_COMPONENTS:35659,FRAGMENT_SHADER_DERIVATIVE_HINT:35723,RASTERIZER_DISCARD:35977,VERTEX_ARRAY_BINDING:34229,MAX_VERTEX_OUTPUT_COMPONENTS:37154,MAX_FRAGMENT_INPUT_COMPONENTS:37157,MAX_SERVER_WAIT_TIMEOUT:37137,MAX_ELEMENT_INDEX:36203,RED:6403,RGB8:32849,RGBA8:32856,RGB10_A2:32857,TEXTURE_3D:32879,TEXTURE_WRAP_R:32882,TEXTURE_MIN_LOD:33082,TEXTURE_MAX_LOD:33083,TEXTURE_BASE_LEVEL:33084,TEXTURE_MAX_LEVEL:33085,TEXTURE_COMPARE_MODE:34892,TEXTURE_COMPARE_FUNC:34893,SRGB:35904,SRGB8:35905,SRGB8_ALPHA8:35907,COMPARE_REF_TO_TEXTURE:34894,RGBA32F:34836,RGB32F:34837,RGBA16F:34842,RGB16F:34843,TEXTURE_2D_ARRAY:35866,TEXTURE_BINDING_2D_ARRAY:35869,R11F_G11F_B10F:35898,RGB9_E5:35901,RGBA32UI:36208,RGB32UI:36209,RGBA16UI:36214,RGB16UI:36215,RGBA8UI:36220,RGB8UI:36221,RGBA32I:36226,RGB32I:36227,RGBA16I:36232,RGB16I:36233,RGBA8I:36238,RGB8I:36239,RED_INTEGER:36244,RGB_INTEGER:36248,RGBA_INTEGER:36249,R8:33321,RG8:33323,R16F:33325,R32F:33326,RG16F:33327,RG32F:33328,R8I:33329,R8UI:33330,R16I:33331,R16UI:33332,R32I:33333,R32UI:33334,RG8I:33335,RG8UI:33336,RG16I:33337,RG16UI:33338,RG32I:33339,RG32UI:33340,R8_SNORM:36756,RG8_SNORM:36757,RGB8_SNORM:36758,RGBA8_SNORM:36759,RGB10_A2UI:36975,TEXTURE_IMMUTABLE_FORMAT:37167,TEXTURE_IMMUTABLE_LEVELS:33503,UNSIGNED_INT_2_10_10_10_REV:33640,UNSIGNED_INT_10F_11F_11F_REV:35899,UNSIGNED_INT_5_9_9_9_REV:35902,FLOAT_32_UNSIGNED_INT_24_8_REV:36269,UNSIGNED_INT_24_8:34042,HALF_FLOAT:5131,RG:33319,RG_INTEGER:33320,INT_2_10_10_10_REV:36255,CURRENT_QUERY:34917,QUERY_RESULT:34918,QUERY_RESULT_AVAILABLE:34919,ANY_SAMPLES_PASSED:35887,ANY_SAMPLES_PASSED_CONSERVATIVE:36202,MAX_DRAW_BUFFERS:34852,DRAW_BUFFER0:34853,DRAW_BUFFER1:34854,DRAW_BUFFER2:34855,DRAW_BUFFER3:34856,DRAW_BUFFER4:34857,DRAW_BUFFER5:34858,DRAW_BUFFER6:34859,DRAW_BUFFER7:34860,DRAW_BUFFER8:34861,DRAW_BUFFER9:34862,DRAW_BUFFER10:34863,DRAW_BUFFER11:34864,DRAW_BUFFER12:34865,DRAW_BUFFER13:34866,DRAW_BUFFER14:34867,DRAW_BUFFER15:34868,MAX_COLOR_ATTACHMENTS:36063,COLOR_ATTACHMENT1:36065,COLOR_ATTACHMENT2:36066,COLOR_ATTACHMENT3:36067,COLOR_ATTACHMENT4:36068,COLOR_ATTACHMENT5:36069,COLOR_ATTACHMENT6:36070,COLOR_ATTACHMENT7:36071,COLOR_ATTACHMENT8:36072,COLOR_ATTACHMENT9:36073,COLOR_ATTACHMENT10:36074,COLOR_ATTACHMENT11:36075,COLOR_ATTACHMENT12:36076,COLOR_ATTACHMENT13:36077,COLOR_ATTACHMENT14:36078,COLOR_ATTACHMENT15:36079,SAMPLER_3D:35679,SAMPLER_2D_SHADOW:35682,SAMPLER_2D_ARRAY:36289,SAMPLER_2D_ARRAY_SHADOW:36292,SAMPLER_CUBE_SHADOW:36293,INT_SAMPLER_2D:36298,INT_SAMPLER_3D:36299,INT_SAMPLER_CUBE:36300,INT_SAMPLER_2D_ARRAY:36303,UNSIGNED_INT_SAMPLER_2D:36306,UNSIGNED_INT_SAMPLER_3D:36307,UNSIGNED_INT_SAMPLER_CUBE:36308,UNSIGNED_INT_SAMPLER_2D_ARRAY:36311,MAX_SAMPLES:36183,SAMPLER_BINDING:35097,PIXEL_PACK_BUFFER:35051,PIXEL_UNPACK_BUFFER:35052,PIXEL_PACK_BUFFER_BINDING:35053,PIXEL_UNPACK_BUFFER_BINDING:35055,COPY_READ_BUFFER:36662,COPY_WRITE_BUFFER:36663,COPY_READ_BUFFER_BINDING:36662,COPY_WRITE_BUFFER_BINDING:36663,FLOAT_MAT2x3:35685,FLOAT_MAT2x4:35686,FLOAT_MAT3x2:35687,FLOAT_MAT3x4:35688,FLOAT_MAT4x2:35689,FLOAT_MAT4x3:35690,UNSIGNED_INT_VEC2:36294,UNSIGNED_INT_VEC3:36295,UNSIGNED_INT_VEC4:36296,UNSIGNED_NORMALIZED:35863,SIGNED_NORMALIZED:36764,VERTEX_ATTRIB_ARRAY_INTEGER:35069,VERTEX_ATTRIB_ARRAY_DIVISOR:35070,TRANSFORM_FEEDBACK_BUFFER_MODE:35967,MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS:35968,TRANSFORM_FEEDBACK_VARYINGS:35971,TRANSFORM_FEEDBACK_BUFFER_START:35972,TRANSFORM_FEEDBACK_BUFFER_SIZE:35973,TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN:35976,MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS:35978,MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS:35979,INTERLEAVED_ATTRIBS:35980,SEPARATE_ATTRIBS:35981,TRANSFORM_FEEDBACK_BUFFER:35982,TRANSFORM_FEEDBACK_BUFFER_BINDING:35983,TRANSFORM_FEEDBACK:36386,TRANSFORM_FEEDBACK_PAUSED:36387,TRANSFORM_FEEDBACK_ACTIVE:36388,TRANSFORM_FEEDBACK_BINDING:36389,FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING:33296,FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE:33297,FRAMEBUFFER_ATTACHMENT_RED_SIZE:33298,FRAMEBUFFER_ATTACHMENT_GREEN_SIZE:33299,FRAMEBUFFER_ATTACHMENT_BLUE_SIZE:33300,FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE:33301,FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE:33302,FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE:33303,FRAMEBUFFER_DEFAULT:33304,DEPTH24_STENCIL8:35056,DRAW_FRAMEBUFFER_BINDING:36006,READ_FRAMEBUFFER_BINDING:36010,RENDERBUFFER_SAMPLES:36011,FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER:36052,FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:36182,UNIFORM_BUFFER:35345,UNIFORM_BUFFER_BINDING:35368,UNIFORM_BUFFER_START:35369,UNIFORM_BUFFER_SIZE:35370,MAX_VERTEX_UNIFORM_BLOCKS:35371,MAX_FRAGMENT_UNIFORM_BLOCKS:35373,MAX_COMBINED_UNIFORM_BLOCKS:35374,MAX_UNIFORM_BUFFER_BINDINGS:35375,MAX_UNIFORM_BLOCK_SIZE:35376,MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS:35377,MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS:35379,UNIFORM_BUFFER_OFFSET_ALIGNMENT:35380,ACTIVE_UNIFORM_BLOCKS:35382,UNIFORM_TYPE:35383,UNIFORM_SIZE:35384,UNIFORM_BLOCK_INDEX:35386,UNIFORM_OFFSET:35387,UNIFORM_ARRAY_STRIDE:35388,UNIFORM_MATRIX_STRIDE:35389,UNIFORM_IS_ROW_MAJOR:35390,UNIFORM_BLOCK_BINDING:35391,UNIFORM_BLOCK_DATA_SIZE:35392,UNIFORM_BLOCK_ACTIVE_UNIFORMS:35394,UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES:35395,UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER:35396,UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER:35398,OBJECT_TYPE:37138,SYNC_CONDITION:37139,SYNC_STATUS:37140,SYNC_FLAGS:37141,SYNC_FENCE:37142,SYNC_GPU_COMMANDS_COMPLETE:37143,UNSIGNALED:37144,SIGNALED:37145,ALREADY_SIGNALED:37146,TIMEOUT_EXPIRED:37147,CONDITION_SATISFIED:37148,WAIT_FAILED:37149,SYNC_FLUSH_COMMANDS_BIT:1,COLOR:6144,DEPTH:6145,STENCIL:6146,MIN:32775,MAX:32776,DEPTH_COMPONENT24:33190,STREAM_READ:35041,STREAM_COPY:35042,STATIC_READ:35045,STATIC_COPY:35046,DYNAMIC_READ:35049,DYNAMIC_COPY:35050,DEPTH_COMPONENT32F:36012,DEPTH32F_STENCIL8:36013,INVALID_INDEX:4294967295,TIMEOUT_IGNORED:-1,MAX_CLIENT_WAIT_TIMEOUT_WEBGL:37447,VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE:35070,UNMASKED_VENDOR_WEBGL:37445,UNMASKED_RENDERER_WEBGL:37446,MAX_TEXTURE_MAX_ANISOTROPY_EXT:34047,TEXTURE_MAX_ANISOTROPY_EXT:34046,COMPRESSED_RGB_S3TC_DXT1_EXT:33776,COMPRESSED_RGBA_S3TC_DXT1_EXT:33777,COMPRESSED_RGBA_S3TC_DXT3_EXT:33778,COMPRESSED_RGBA_S3TC_DXT5_EXT:33779,COMPRESSED_R11_EAC:37488,COMPRESSED_SIGNED_R11_EAC:37489,COMPRESSED_RG11_EAC:37490,COMPRESSED_SIGNED_RG11_EAC:37491,COMPRESSED_RGB8_ETC2:37492,COMPRESSED_RGBA8_ETC2_EAC:37493,COMPRESSED_SRGB8_ETC2:37494,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:37495,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:37496,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:37497,COMPRESSED_RGB_PVRTC_4BPPV1_IMG:35840,COMPRESSED_RGBA_PVRTC_4BPPV1_IMG:35842,COMPRESSED_RGB_PVRTC_2BPPV1_IMG:35841,COMPRESSED_RGBA_PVRTC_2BPPV1_IMG:35843,COMPRESSED_RGB_ETC1_WEBGL:36196,COMPRESSED_RGB_ATC_WEBGL:35986,COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL:35986,COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL:34798,UNSIGNED_INT_24_8_WEBGL:34042,HALF_FLOAT_OES:36193,RGBA32F_EXT:34836,RGB32F_EXT:34837,FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT:33297,UNSIGNED_NORMALIZED_EXT:35863,MIN_EXT:32775,MAX_EXT:32776,SRGB_EXT:35904,SRGB_ALPHA_EXT:35906,SRGB8_ALPHA8_EXT:35907,FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT:33296,FRAGMENT_SHADER_DERIVATIVE_HINT_OES:35723,COLOR_ATTACHMENT0_WEBGL:36064,COLOR_ATTACHMENT1_WEBGL:36065,COLOR_ATTACHMENT2_WEBGL:36066,COLOR_ATTACHMENT3_WEBGL:36067,COLOR_ATTACHMENT4_WEBGL:36068,COLOR_ATTACHMENT5_WEBGL:36069,COLOR_ATTACHMENT6_WEBGL:36070,COLOR_ATTACHMENT7_WEBGL:36071,COLOR_ATTACHMENT8_WEBGL:36072,COLOR_ATTACHMENT9_WEBGL:36073,COLOR_ATTACHMENT10_WEBGL:36074,COLOR_ATTACHMENT11_WEBGL:36075,COLOR_ATTACHMENT12_WEBGL:36076,COLOR_ATTACHMENT13_WEBGL:36077,COLOR_ATTACHMENT14_WEBGL:36078,COLOR_ATTACHMENT15_WEBGL:36079,DRAW_BUFFER0_WEBGL:34853,DRAW_BUFFER1_WEBGL:34854,DRAW_BUFFER2_WEBGL:34855,DRAW_BUFFER3_WEBGL:34856,DRAW_BUFFER4_WEBGL:34857,DRAW_BUFFER5_WEBGL:34858,DRAW_BUFFER6_WEBGL:34859,DRAW_BUFFER7_WEBGL:34860,DRAW_BUFFER8_WEBGL:34861,DRAW_BUFFER9_WEBGL:34862,DRAW_BUFFER10_WEBGL:34863,DRAW_BUFFER11_WEBGL:34864,DRAW_BUFFER12_WEBGL:34865,DRAW_BUFFER13_WEBGL:34866,DRAW_BUFFER14_WEBGL:34867,DRAW_BUFFER15_WEBGL:34868,MAX_COLOR_ATTACHMENTS_WEBGL:36063,MAX_DRAW_BUFFERS_WEBGL:34852,VERTEX_ARRAY_BINDING_OES:34229,QUERY_COUNTER_BITS_EXT:34916,CURRENT_QUERY_EXT:34917,QUERY_RESULT_EXT:34918,QUERY_RESULT_AVAILABLE_EXT:34919,TIME_ELAPSED_EXT:35007,TIMESTAMP_EXT:36392,GPU_DISJOINT_EXT:36795}},H4cH:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return i}));var r={ORIGINAL:0,TILE:1,DEPTH:2,CUSTOM:3},o={1:[197,78,90],2:[197,108,78],3:[198,139,77],4:[199,170,75],5:[188,195,69],6:[131,202,74],7:[85,194,69],8:[73,188,115],9:[70,174,172],10:[68,118,182],11:[97,74,183],12:[125,58,174]};function i(e,t){switch(t.coloredBy){case r.TILE:return i=e.id,a=t.colorsMap,s=Array.from({length:3},(function(e){return Math.round(255*Math.random())})),a[i]=a[i]||s,a[i];case r.DEPTH:return n=e.depth,o[n]||o[12];case r.CUSTOM:default:return[255,255,255]}var n,i,a,s}},NZ3H:function(e,t,n){"use strict";n.d(t,"a",(function(){return y}));var r=n("rePB"),o=n("dI71"),i=n("Aabs"),a=n("0i8A"),s=n("V3d6"),u=n("G8qk"),_=n("Jh/b"),l=n("+w+S"),c="#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\n\nstruct AmbientLight {\n vec3 color;\n};\n\nstruct PointLight {\n vec3 color;\n vec3 position;\n vec3 attenuation;\n};\n\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\n\nuniform AmbientLight lighting_uAmbientLight;\nuniform PointLight lighting_uPointLight[MAX_LIGHTS];\nuniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];\nuniform int lighting_uPointLightCount;\nuniform int lighting_uDirectionalLightCount;\n\nuniform bool lighting_uEnabled;\n\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n\n#endif\n";function E(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return R(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return R(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,s=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return a=e.done,e},e:function(e){s=!0,i=e},f:function(){try{a||null==n.return||n.return()}finally{if(s)throw i}}}}function R(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var T={lightSources:{}};function A(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.color,n=void 0===t?[0,0,0]:t,r=e.intensity,o=void 0===r?1:r;return n.map((function(e){return e*o/255}))}function p(e){var t=e.ambientLight,n=e.pointLights,r=void 0===n?[]:n,o=e.directionalLights,i=void 0===o?[]:o,a={};return a["lighting_uAmbientLight.color"]=t?A(t):[0,0,0],r.forEach((function(e,t){a["lighting_uPointLight[".concat(t,"].color")]=A(e),a["lighting_uPointLight[".concat(t,"].position")]=e.position,a["lighting_uPointLight[".concat(t,"].attenuation")]=e.attenuation||[1,0,0]})),a.lighting_uPointLightCount=r.length,i.forEach((function(e,t){a["lighting_uDirectionalLight[".concat(t,"].color")]=A(e),a["lighting_uDirectionalLight[".concat(t,"].direction")]=e.direction})),a.lighting_uDirectionalLightCount=i.length,a}var f={name:"pbr",vs:"uniform mat4 u_MVPMatrix;\nuniform mat4 u_ModelMatrix;\nuniform mat4 u_NormalMatrix;\n\nvarying vec3 pbr_vPosition;\nvarying vec2 pbr_vUV;\n\n#ifdef HAS_NORMALS\n# ifdef HAS_TANGENTS\nvarying mat3 pbr_vTBN;\n# else\nvarying vec3 pbr_vNormal;\n# endif\n#endif\n\nvoid pbr_setPositionNormalTangentUV(vec4 position, vec4 normal, vec4 tangent, vec2 uv)\n{\n  vec4 pos = u_ModelMatrix * position;\n  pbr_vPosition = vec3(pos.xyz) / pos.w;\n\n#ifdef HAS_NORMALS\n#ifdef HAS_TANGENTS\n  vec3 normalW = normalize(vec3(u_NormalMatrix * vec4(normal.xyz, 0.0)));\n  vec3 tangentW = normalize(vec3(u_ModelMatrix * vec4(tangent.xyz, 0.0)));\n  vec3 bitangentW = cross(normalW, tangentW) * tangent.w;\n  pbr_vTBN = mat3(tangentW, bitangentW, normalW);\n#else\n  pbr_vNormal = normalize(vec3(u_ModelMatrix * vec4(normal.xyz, 0.0)));\n#endif\n#endif\n\n#ifdef HAS_UV\n  pbr_vUV = uv;\n#else\n  pbr_vUV = vec2(0.,0.);\n#endif\n}\n",fs:"#if defined(USE_TEX_LOD) && !defined(FEATURE_GLSL_TEXTURE_LOD)\n# error PBR fragment shader: Texture LOD is not available\n#endif\n\n#if !defined(HAS_TANGENTS) && !defined(FEATURE_GLSL_DERIVATIVES)\n# error PBR fragment shader: Derivatives are not available\n#endif\n\n\n#if (__VERSION__ < 300)\n  #define SMART_FOR(INIT, WEBGL1COND, WEBGL2COND, INCR) for (INIT; WEBGL1COND; INCR)\n#else\n  #define SMART_FOR(INIT, WEBGL1COND, WEBGL2COND, INCR) for (INIT; WEBGL2COND; INCR)\n#endif\n\nprecision highp float;\n\nuniform bool pbr_uUnlit;\n\n#ifdef USE_IBL\nuniform samplerCube u_DiffuseEnvSampler;\nuniform samplerCube u_SpecularEnvSampler;\nuniform sampler2D u_brdfLUT;\nuniform vec2 u_ScaleIBLAmbient;\n#endif\n\n#ifdef HAS_BASECOLORMAP\nuniform sampler2D u_BaseColorSampler;\n#endif\n#ifdef HAS_NORMALMAP\nuniform sampler2D u_NormalSampler;\nuniform float u_NormalScale;\n#endif\n#ifdef HAS_EMISSIVEMAP\nuniform sampler2D u_EmissiveSampler;\nuniform vec3 u_EmissiveFactor;\n#endif\n#ifdef HAS_METALROUGHNESSMAP\nuniform sampler2D u_MetallicRoughnessSampler;\n#endif\n#ifdef HAS_OCCLUSIONMAP\nuniform sampler2D u_OcclusionSampler;\nuniform float u_OcclusionStrength;\n#endif\n\n#ifdef ALPHA_CUTOFF\nuniform float u_AlphaCutoff;\n#endif\n\nuniform vec2 u_MetallicRoughnessValues;\nuniform vec4 u_BaseColorFactor;\n\nuniform vec3 u_Camera;\n#ifdef PBR_DEBUG\nuniform vec4 u_ScaleDiffBaseMR;\nuniform vec4 u_ScaleFGDSpec;\n#endif\n\nvarying vec3 pbr_vPosition;\n\nvarying vec2 pbr_vUV;\n\n#ifdef HAS_NORMALS\n#ifdef HAS_TANGENTS\nvarying mat3 pbr_vTBN;\n#else\nvarying vec3 pbr_vNormal;\n#endif\n#endif\n\n\nstruct PBRInfo\n{\n  float NdotL;\n  float NdotV;\n  float NdotH;\n  float LdotH;\n  float VdotH;\n  float perceptualRoughness;\n  float metalness;\n  vec3 reflectance0;\n  vec3 reflectance90;\n  float alphaRoughness;\n  vec3 diffuseColor;\n  vec3 specularColor;\n  vec3 n;\n  vec3 v;\n};\n\nconst float M_PI = 3.141592653589793;\nconst float c_MinRoughness = 0.04;\n\nvec4 SRGBtoLINEAR(vec4 srgbIn)\n{\n#ifdef MANUAL_SRGB\n#ifdef SRGB_FAST_APPROXIMATION\n  vec3 linOut = pow(srgbIn.xyz,vec3(2.2));\n#else\n  vec3 bLess = step(vec3(0.04045),srgbIn.xyz);\n  vec3 linOut = mix( srgbIn.xyz/vec3(12.92), pow((srgbIn.xyz+vec3(0.055))/vec3(1.055),vec3(2.4)), bLess );\n#endif\n  return vec4(linOut,srgbIn.w);;\n#else\n  return srgbIn;\n#endif\n}\n\nvec3 getNormal()\n{\n#ifndef HAS_TANGENTS\n  vec3 pos_dx = dFdx(pbr_vPosition);\n  vec3 pos_dy = dFdy(pbr_vPosition);\n  vec3 tex_dx = dFdx(vec3(pbr_vUV, 0.0));\n  vec3 tex_dy = dFdy(vec3(pbr_vUV, 0.0));\n  vec3 t = (tex_dy.t * pos_dx - tex_dx.t * pos_dy) / (tex_dx.s * tex_dy.t - tex_dy.s * tex_dx.t);\n\n#ifdef HAS_NORMALS\n  vec3 ng = normalize(pbr_vNormal);\n#else\n  vec3 ng = cross(pos_dx, pos_dy);\n#endif\n\n  t = normalize(t - ng * dot(ng, t));\n  vec3 b = normalize(cross(ng, t));\n  mat3 tbn = mat3(t, b, ng);\n#else\n  mat3 tbn = pbr_vTBN;\n#endif\n\n#ifdef HAS_NORMALMAP\n  vec3 n = texture2D(u_NormalSampler, pbr_vUV).rgb;\n  n = normalize(tbn * ((2.0 * n - 1.0) * vec3(u_NormalScale, u_NormalScale, 1.0)));\n#else\n  vec3 n = normalize(tbn[2].xyz);\n#endif\n\n  return n;\n}\n\n\n#ifdef USE_IBL\nvec3 getIBLContribution(PBRInfo pbrInputs, vec3 n, vec3 reflection)\n{\n  float mipCount = 9.0;\n  float lod = (pbrInputs.perceptualRoughness * mipCount);\n  vec3 brdf = SRGBtoLINEAR(texture2D(u_brdfLUT,\n    vec2(pbrInputs.NdotV, 1.0 - pbrInputs.perceptualRoughness))).rgb;\n  vec3 diffuseLight = SRGBtoLINEAR(textureCube(u_DiffuseEnvSampler, n)).rgb;\n\n#ifdef USE_TEX_LOD\n  vec3 specularLight = SRGBtoLINEAR(textureCubeLod(u_SpecularEnvSampler, reflection, lod)).rgb;\n#else\n  vec3 specularLight = SRGBtoLINEAR(textureCube(u_SpecularEnvSampler, reflection)).rgb;\n#endif\n\n  vec3 diffuse = diffuseLight * pbrInputs.diffuseColor;\n  vec3 specular = specularLight * (pbrInputs.specularColor * brdf.x + brdf.y);\n  diffuse *= u_ScaleIBLAmbient.x;\n  specular *= u_ScaleIBLAmbient.y;\n\n  return diffuse + specular;\n}\n#endif\n\n\nvec3 diffuse(PBRInfo pbrInputs)\n{\n  return pbrInputs.diffuseColor / M_PI;\n}\n\nvec3 specularReflection(PBRInfo pbrInputs)\n{\n  return pbrInputs.reflectance0 +\n    (pbrInputs.reflectance90 - pbrInputs.reflectance0) *\n    pow(clamp(1.0 - pbrInputs.VdotH, 0.0, 1.0), 5.0);\n}\n\n\n\nfloat geometricOcclusion(PBRInfo pbrInputs)\n{\n  float NdotL = pbrInputs.NdotL;\n  float NdotV = pbrInputs.NdotV;\n  float r = pbrInputs.alphaRoughness;\n\n  float attenuationL = 2.0 * NdotL / (NdotL + sqrt(r * r + (1.0 - r * r) * (NdotL * NdotL)));\n  float attenuationV = 2.0 * NdotV / (NdotV + sqrt(r * r + (1.0 - r * r) * (NdotV * NdotV)));\n  return attenuationL * attenuationV;\n}\n\n\n\n\n\nfloat microfacetDistribution(PBRInfo pbrInputs)\n{\n  float roughnessSq = pbrInputs.alphaRoughness * pbrInputs.alphaRoughness;\n  float f = (pbrInputs.NdotH * roughnessSq - pbrInputs.NdotH) * pbrInputs.NdotH + 1.0;\n  return roughnessSq / (M_PI * f * f);\n}\n\nvoid PBRInfo_setAmbientLight(inout PBRInfo pbrInputs) {\n  pbrInputs.NdotL = 1.0;\n  pbrInputs.NdotH = 0.0;\n  pbrInputs.LdotH = 0.0;\n  pbrInputs.VdotH = 1.0;\n}\n\nvoid PBRInfo_setDirectionalLight(inout PBRInfo pbrInputs, vec3 lightDirection) {\n  vec3 n = pbrInputs.n;\n  vec3 v = pbrInputs.v;\n  vec3 l = normalize(lightDirection);\n  vec3 h = normalize(l+v);\n\n  pbrInputs.NdotL = clamp(dot(n, l), 0.001, 1.0);\n  pbrInputs.NdotH = clamp(dot(n, h), 0.0, 1.0);\n  pbrInputs.LdotH = clamp(dot(l, h), 0.0, 1.0);\n  pbrInputs.VdotH = clamp(dot(v, h), 0.0, 1.0);\n}\n\nvoid PBRInfo_setPointLight(inout PBRInfo pbrInputs, PointLight pointLight) {\n  vec3 light_direction = normalize(pointLight.position - pbr_vPosition);\n  PBRInfo_setDirectionalLight(pbrInputs, light_direction);\n}\n\nvec3 calculateFinalColor(PBRInfo pbrInputs, vec3 lightColor) {\n  vec3 F = specularReflection(pbrInputs);\n  float G = geometricOcclusion(pbrInputs);\n  float D = microfacetDistribution(pbrInputs);\n  vec3 diffuseContrib = (1.0 - F) * diffuse(pbrInputs);\n  vec3 specContrib = F * G * D / (4.0 * pbrInputs.NdotL * pbrInputs.NdotV);\n  return pbrInputs.NdotL * lightColor * (diffuseContrib + specContrib);\n}\n\nvec4 pbr_filterColor(vec4 colorUnused)\n{\n#ifdef HAS_BASECOLORMAP\n  vec4 baseColor = SRGBtoLINEAR(texture2D(u_BaseColorSampler, pbr_vUV)) * u_BaseColorFactor;\n#else\n  vec4 baseColor = u_BaseColorFactor;\n#endif\n\n#ifdef ALPHA_CUTOFF\n  if (baseColor.a < u_AlphaCutoff) {\n    discard;\n  }\n#endif\n\n  vec3 color = vec3(0, 0, 0);\n\n  if(pbr_uUnlit){\n    color.rgb = baseColor.rgb;\n  }\n  else{\n\n\n    float perceptualRoughness = u_MetallicRoughnessValues.y;\n    float metallic = u_MetallicRoughnessValues.x;\n#ifdef HAS_METALROUGHNESSMAP\n\n    vec4 mrSample = texture2D(u_MetallicRoughnessSampler, pbr_vUV);\n    perceptualRoughness = mrSample.g * perceptualRoughness;\n    metallic = mrSample.b * metallic;\n#endif\n    perceptualRoughness = clamp(perceptualRoughness, c_MinRoughness, 1.0);\n    metallic = clamp(metallic, 0.0, 1.0);\n\n    float alphaRoughness = perceptualRoughness * perceptualRoughness;\n\n    vec3 f0 = vec3(0.04);\n    vec3 diffuseColor = baseColor.rgb * (vec3(1.0) - f0);\n    diffuseColor *= 1.0 - metallic;\n    vec3 specularColor = mix(f0, baseColor.rgb, metallic);\n    float reflectance = max(max(specularColor.r, specularColor.g), specularColor.b);\n\n\n\n    float reflectance90 = clamp(reflectance * 25.0, 0.0, 1.0);\n    vec3 specularEnvironmentR0 = specularColor.rgb;\n    vec3 specularEnvironmentR90 = vec3(1.0, 1.0, 1.0) * reflectance90;\n\n    vec3 n = getNormal();\n    vec3 v = normalize(u_Camera - pbr_vPosition);\n\n    float NdotV = clamp(abs(dot(n, v)), 0.001, 1.0);\n    vec3 reflection = -normalize(reflect(v, n));\n\n    PBRInfo pbrInputs = PBRInfo(\n      0.0,\n      NdotV,\n      0.0,\n      0.0,\n      0.0,\n      perceptualRoughness,\n      metallic,\n      specularEnvironmentR0,\n      specularEnvironmentR90,\n      alphaRoughness,\n      diffuseColor,\n      specularColor,\n      n,\n      v\n    );\n\n#ifdef USE_LIGHTS\n    PBRInfo_setAmbientLight(pbrInputs);\n    color += calculateFinalColor(pbrInputs, lighting_uAmbientLight.color);\n    SMART_FOR(int i = 0, i < MAX_LIGHTS, i < lighting_uDirectionalLightCount, i++) {\n      if (i < lighting_uDirectionalLightCount) {\n        PBRInfo_setDirectionalLight(pbrInputs, lighting_uDirectionalLight[i].direction);\n        color += calculateFinalColor(pbrInputs, lighting_uDirectionalLight[i].color);\n      }\n    }\n    SMART_FOR(int i = 0, i < MAX_LIGHTS, i < lighting_uPointLightCount, i++) {\n      if (i < lighting_uPointLightCount) {\n        PBRInfo_setPointLight(pbrInputs, lighting_uPointLight[i]);\n        float attenuation = getPointLightAttenuation(lighting_uPointLight[i], distance(lighting_uPointLight[i].position, pbr_vPosition));\n        color += calculateFinalColor(pbrInputs, lighting_uPointLight[i].color / attenuation);\n      }\n    }\n#endif\n#ifdef USE_IBL\n    color += getIBLContribution(pbrInputs, n, reflection);\n#endif\n#ifdef HAS_OCCLUSIONMAP\n    float ao = texture2D(u_OcclusionSampler, pbr_vUV).r;\n    color = mix(color, color * ao, u_OcclusionStrength);\n#endif\n\n#ifdef HAS_EMISSIVEMAP\n    vec3 emissive = SRGBtoLINEAR(texture2D(u_EmissiveSampler, pbr_vUV)).rgb * u_EmissiveFactor;\n    color += emissive;\n#endif\n\n#ifdef PBR_DEBUG\n\n\n\n\n\n    color = mix(color, baseColor.rgb, u_ScaleDiffBaseMR.y);\n    color = mix(color, vec3(metallic), u_ScaleDiffBaseMR.z);\n    color = mix(color, vec3(perceptualRoughness), u_ScaleDiffBaseMR.w);\n#endif\n\n  }\n\n  return vec4(pow(color,vec3(1.0/2.2)), baseColor.a);\n}\n",defines:{LIGHTING_FRAGMENT:1},dependencies:[{name:"lights",vs:c,fs:c,getUniforms:function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:T;if("lightSources"in t){var n=t.lightSources||{},r=n.ambientLight,o=n.pointLights,i=n.directionalLights,a=r||o&&o.length>0||i&&i.length>0;return a?Object.assign({},p({ambientLight:r,pointLights:o,directionalLights:i}),{lighting_uEnabled:!0}):{lighting_uEnabled:!1}}if("lights"in t){var s,u={pointLights:[],directionalLights:[]},_=E(t.lights||[]);try{for(_.s();!(s=_.n()).done;){var l=s.value;switch(l.type){case"ambient":u.ambientLight=l;break;case"directional":u.directionalLights.push(l);break;case"point":u.pointLights.push(l)}}}catch(c){_.e(c)}finally{_.f()}return e({lightSources:u})}return{}},defines:{MAX_LIGHTS:3}}]},I=n("ykdB"),d=n("d3kR"),S=n("tMmZ"),N=n("f5Sf"),O=n("iein");function m(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?m(Object(n),!0).forEach((function(t){Object(r.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var g=function(){function e(e,t){var n=t.attributes,r=t.material,o=t.pbrDebug,i=t.imageBasedLightingEnvironment,a=t.lights,s=t.useTangents;this.gl=e,this.defines={MANUAL_SRGB:1,SRGB_FAST_APPROXIMATION:1},Object(d.b)(e,S.a.GLSL_TEXTURE_LOD)&&(this.defines.USE_TEX_LOD=1),this.uniforms={u_Camera:[0,0,0],u_MetallicRoughnessValues:[1,1]},this.parameters={},this.generatedTextures=[],i&&(this.uniforms.u_DiffuseEnvSampler=i.getDiffuseEnvSampler(),this.uniforms.u_SpecularEnvSampler=i.getSpecularEnvSampler(),this.uniforms.u_brdfLUT=i.getBrdfTexture(),this.uniforms.u_ScaleIBLAmbient=[1,1]),o&&(this.uniforms.u_ScaleDiffBaseMR=[0,0,0,0],this.uniforms.u_ScaleFGDSpec=[0,0,0,0]),this.defineIfPresent(n.NORMAL,"HAS_NORMALS"),this.defineIfPresent(n.TANGENT&&s,"HAS_TANGENTS"),this.defineIfPresent(n.TEXCOORD_0,"HAS_UV"),this.defineIfPresent(i,"USE_IBL"),this.defineIfPresent(a,"USE_LIGHTS"),this.defineIfPresent(o,"PBR_DEBUG"),r&&this.parseMaterial(r)}var t=e.prototype;return t.defineIfPresent=function(e,t){e&&(this.defines[t]=1)},t.parseTexture=function(e,t,n){var r;void 0===n&&(n=null);var o,i,a=e.texture&&e.texture.sampler&&e.texture.sampler.parameters||{},s=e.texture.source.image,u={};s.compressed?(o=s,(i={})[this.gl.TEXTURE_MIN_FILTER]=s.data.length>1?this.gl.LINEAR_MIPMAP_NEAREST:this.gl.LINEAR,u=i):o={data:s};var _=new N.a(this.gl,h({id:e.name||e.id,parameters:h(h({},a),u),pixelStore:(r={},r[this.gl.UNPACK_FLIP_Y_WEBGL]=!1,r)},o));this.uniforms[t]=_,this.defineIfPresent(n,n),this.generatedTextures.push(_)},t.parsePbrMetallicRoughness=function(e){e.baseColorTexture&&this.parseTexture(e.baseColorTexture,"u_BaseColorSampler","HAS_BASECOLORMAP"),this.uniforms.u_BaseColorFactor=e.baseColorFactor||[1,1,1,1],e.metallicRoughnessTexture&&this.parseTexture(e.metallicRoughnessTexture,"u_MetallicRoughnessSampler","HAS_METALROUGHNESSMAP");var t=e.metallicFactor,n=void 0===t?1:t,r=e.roughnessFactor,o=void 0===r?1:r;this.uniforms.u_MetallicRoughnessValues=[n,o]},t.parseMaterial=function(e){if(this.uniforms.pbr_uUnlit=Boolean(e.unlit),e.pbrMetallicRoughness&&this.parsePbrMetallicRoughness(e.pbrMetallicRoughness),e.normalTexture){this.parseTexture(e.normalTexture,"u_NormalSampler","HAS_NORMALMAP");var t=e.normalTexture.scale,n=void 0===t?1:t;this.uniforms.u_NormalScale=n}if(e.occlusionTexture){this.parseTexture(e.occlusionTexture,"u_OcclusionSampler","HAS_OCCLUSIONMAP");var r=e.occlusionTexture.strength,o=void 0===r?1:r;this.uniforms.u_OcclusionStrength=o}if(e.emissiveTexture&&(this.parseTexture(e.emissiveTexture,"u_EmissiveSampler","HAS_EMISSIVEMAP"),this.uniforms.u_EmissiveFactor=e.emissiveFactor||[0,0,0]),"MASK"===e.alphaMode){var i=e.alphaCutoff,a=void 0===i?.5:i;this.defines.ALPHA_CUTOFF=1,this.uniforms.u_AlphaCutoff=a}else"BLEND"===e.alphaMode&&(O.j.warn("BLEND alphaMode might not work well because it requires mesh sorting")(),Object.assign(this.parameters,{blend:!0,blendEquation:this.gl.FUNC_ADD,blendFunc:[this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA,this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA]}))},e}();n("rpwb");Math.PI,new Float32Array(16),new Float32Array(12);function C(e,t){return t===s.a.CARTESIAN||t===s.a.METER_OFFSETS||t===s.a.DEFAULT&&!e.isGeospatial}function M(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?M(Object(n),!0).forEach((function(t){Object(r.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):M(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function L(e,t){(e.COLOR_0||e.colors)&&t||(e.colors={constant:!0,value:new Float32Array([1,1,1])}),_.a.assert(e.positions||e.POSITION,'no "postions" or "POSITION" attribute in mesh')}function v(e,t){if(e.attributes)return L(e.attributes,t),e instanceof a.a?e:new a.a(e);if(e.positions||e.POSITION)return L(e,t),new a.a({attributes:e});throw Error("Invalid mesh")}var F=function(e){function t(){return e.apply(this,arguments)||this}Object(o.a)(t,e);var n=t.prototype;return n.getShaders=function(){var t=this.props,n=t.material,r=t.isDebugMode,o=e.prototype.getShaders.call(this),i=o.modules;return n&&i.push(f),r&&(o.defines.INSTANCE_PICKING_MODE=1),b(b({},o),{},{vs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-vs\n\n// Scale the model\nuniform float sizeScale;\nuniform bool composeModelMatrix;\n\n// Primitive attributes\nin vec3 positions;\nin vec3 normals;\nin vec3 colors;\nin vec2 texCoords;\nin vec3 pickingColors;\n\n// Instance attributes\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin mat3 instanceModelMatrix;\nin vec3 instanceTranslation;\n\n// Outputs to fragment shader\nout vec2 vTexCoord;\nout vec3 cameraPosition;\nout vec3 normals_commonspace;\nout vec4 position_commonspace;\nout vec4 vColor;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = texCoords;\n\n  #ifdef INSTANCE_PICKING_MODE\n    geometry.pickingColor = instancePickingColors;\n  #else\n    geometry.pickingColor = pickingColors;\n  #endif\n\n  #ifdef MODULE_PBR\n    // set PBR data\n    #ifdef HAS_NORMALS\n      pbr_vNormal = project_normal(instanceModelMatrix * normals);\n      geometry.normal = pbr_vNormal;\n    #endif\n\n    #ifdef HAS_UV\n      pbr_vUV = texCoords;\n    #else\n      pbr_vUV = vec2(0., 0.);\n    #endif\n    geometry.uv = pbr_vUV;\n  #endif\n\n  vTexCoord = texCoords;\n  cameraPosition = project_uCameraPosition;\n  normals_commonspace = project_normal(instanceModelMatrix * normals);\n  vColor = vec4(colors * instanceColors.rgb, instanceColors.a);\n  geometry.normal = normals_commonspace;\n\n  vec3 pos = (instanceModelMatrix * positions) * sizeScale + instanceTranslation;\n\n  if (composeModelMatrix) {\n    DECKGL_FILTER_SIZE(pos, geometry);\n    gl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), position_commonspace);\n  }\n  else {\n    pos = project_size(pos);\n    DECKGL_FILTER_SIZE(pos, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, position_commonspace);\n  }\n\n  geometry.position = position_commonspace;\n\n  #ifdef MODULE_PBR\n    // set PBR data\n    pbr_vPosition = geometry.position.xyz;\n  #endif\n\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-fs\n\nprecision highp float;\n\nuniform bool hasTexture;\nuniform sampler2D sampler;\nuniform bool flatShading;\nuniform float opacity;\n\nin vec2 vTexCoord;\nin vec3 cameraPosition;\nin vec3 normals_commonspace;\nin vec4 position_commonspace;\nin vec4 vColor;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  \n#ifdef MODULE_PBR\n\n  fragColor = vColor * pbr_filterColor(vec4(0));\n  geometry.uv = pbr_vUV;\n  fragColor.a *= opacity;\n\n#else\n\n  geometry.uv = vTexCoord;\n\n  vec3 normal;\n  if (flatShading) {\n\n// NOTE(Tarek): This is necessary because\n// headless.gl reports the extension as\n// available but does not support it in\n// the shader.\n#ifdef DERIVATIVES_AVAILABLE\n    normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n#else\n    normal = vec3(0.0, 0.0, 1.0);\n#endif\n  } else {\n    normal = normals_commonspace;\n  }\n\n  vec4 color = hasTexture ? texture(sampler, vTexCoord) : vColor;\n  vec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);\n  fragColor = vec4(lightColor, color.a * opacity);\n\n#endif\n\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n}\n"})},n.initializeState=function(){e.prototype.initializeState.call(this),this.state.attributeManager.add({pickingColors:{type:i.a.UNSIGNED_BYTE,size:3,noAlloc:!0,update:this.calculatePickingColors}})},n.draw=function(e){var t=e.uniforms;if(this.state.model){var n=this.context.viewport,r=this.props,o=r.sizeScale,i=r.coordinateSystem,a=r._instanced;this.state.model.draw({uniforms:Object.assign({},t,{sizeScale:o,composeModelMatrix:!a||C(n,i),flatShading:!this.state.hasNormals,u_Camera:this.state.model.getUniforms().project_uCameraPosition})})}},n.getModel=function(e){var t,n,r=null;if(this.props.material){var o=this.props.material,i=Boolean(o.pbrMetallicRoughness&&o.pbrMetallicRoughness.baseColorTexture);r=new g(this.context.gl,{attributes:{NORMAL:e.attributes.normals,TEXCOORD_0:e.attributes.texCoords},material:b({unlit:i},o),pbrDebug:!1,imageBasedLightingEnvironment:null,lights:!0,useTangents:!1})}var a=this.getShaders(),s=new I.a(this.context.gl,Object.assign({},a,{id:this.props.id,geometry:v(e,!0),defines:b(b({},a.defines),null===(t=r)||void 0===t?void 0:t.defines),parameters:null===(n=r)||void 0===n?void 0:n.parameters,isInstanced:!0})),u=this.props.texture,_=this.state.emptyTexture;return r?s.setUniforms(r.uniforms):s.setUniforms({sampler:u||_,hasTexture:Boolean(u)}),s},n.setTexture=function(e){if(!this.props.material){var t=this.state,n=t.emptyTexture,r=t.model;r&&r.setUniforms({sampler:e||n,hasTexture:Boolean(e)})}},n.calculatePickingColors=function(e){for(var t=this.props.mesh.attributes.featureIds.value,n=new Uint8ClampedArray(t.length*e.size),r=0;r<t.length;r++){var o=this.encodePickingColor(t[r]);n[3*r]=o[0],n[3*r+1]=o[1],n[3*r+2]=o[2]}e.value=n},t}(l.a);F.layerName="MeshLayer";var D=n("H4cH");function P(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function B(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?P(Object(n),!0).forEach((function(t){Object(r.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):P(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var U=[0],y=function(e){function t(){return e.apply(this,arguments)||this}Object(o.a)(t,e);var n=t.prototype;return n.initializeState=function(){"onTileLoadFail"in this.props&&_.a.removed("onTileLoadFail","onTileError")(),this.state={layerMap:{},colorsMap:{},tileset3d:null}},n._updateTileset=function(e){var t=this.context,n=t.timeline,r=t.deck.viewManager.getViewports();if(n&&r&&e){var o=e.update(r);this.state.frameNumber!==o&&this.setState({frameNumber:o})}},n._makeSimpleMeshLayer=function(e,t){var n=e.content,r=n.attributes,o=n.modelMatrix,u=n.cartographicOrigin,_=n.texture,l=n.material,c=this.props,E=c.pickable,R=c.autoHighlight,T=c.coloredBy,A=c.isDebugMode,p=this.state.colorsMap,f=t&&t.props.mesh||new a.a({drawMode:i.a.TRIANGLES,attributes:G(r)});return new F(this.getSubLayerProps({id:"mesh"}),{id:this.id+"-mesh-"+e.id,mesh:f,data:U,getPosition:[0,0,0],getColor:Object(D.b)(e,{coloredBy:T,colorsMap:p}),texture:_,material:l,modelMatrix:o,coordinateOrigin:u,coordinateSystem:s.a.METER_OFFSETS,pickable:E,autoHighlight:R,highlightColor:[0,0,255,150],isDebugMode:A})},t}(u.a);function G(e){var t={};return t.positions=B(B({},e.positions),{},{value:new Float32Array(e.positions.value)}),e.normals&&(t.normals=e.normals),e.texCoords&&(t.texCoords=e.texCoords),e.colors&&(t.colors=e.colors),e.featureIds&&(t.featureIds=e.featureIds),t}},VBSM:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return _}));var r=n("o0o1"),o=n.n(r),i=(n("wcNg"),n("HaE+")),a=n("qTUp"),s={name:"I3S Attribute",id:"i3s-attribute",module:"i3s",version:"undefined"!=typeof __VERSION__?__VERSION__:"latest",mimeTypes:["application/binary"],parse:function(e,t){return u.apply(this,arguments)},extensions:["bin"],options:{},binary:!0};function u(){return(u=Object(i.a)(o.a.mark((function e(t,n){return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=Object(a.a)(t,n),e.abrupt("return",t);case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function _(e,t){var n=e.header&&e.header.userData&&e.header.userData.attributesByObjectId;return n&&n.get(t)?n.get(t):null}},lese:function(e,t,n){"use strict";n.d(t,"a",(function(){return Ee}));var r=n("o0o1"),o=n.n(r),i=(n("wcNg"),n("HaE+")),a=n("24Wh"),s=n("KQm4"),u=n("zXfU"),_=n("Ns70"),l=n("O6hP"),c=n("rOwd");function E(e){var t=e.halfSize,n=_.a.WGS84.cartographicToCartesian(e.center),r=(new c.a).fromCornerPoints([n[0]-t[0],n[1]-t[1],n[2]-t[2]],[n[0]+t[0],n[1]+t[1],n[2]+t[2]]);return[].concat(Object(s.a)(e.center),[r.radius])}function R(e){return T.apply(this,arguments)}function T(){return(T=Object(i.a)(o.a.mark((function e(t){return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",JSON.parse((new TextDecoder).decode(t)));case 1:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var A={name:"I3S Node Page",id:"i3s-node-page",module:"i3s",version:"undefined"!=typeof __VERSION__?__VERSION__:"latest",mimeTypes:["application/json"],parse:function(e){return p.apply(this,arguments)},extensions:["json"],options:{}};function p(){return(p=Object(i.a)(o.a.mark((function e(t){return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=R(t),e.abrupt("return",t);case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function f(e,t){return void 0===t&&(t=null),t?e+"?token="+t:e}function I(e,t){for(var n=[],r=e.attributeStorageInfo,o=e.url,i=0;i<r.length;i++){var a=r[i].key;n.push(o+"/nodes/"+t+"/attributes/"+a+"/0")}return n}var d=n("ipMt");function S(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return N(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return N(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0;return function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(n=e[Symbol.iterator]()).next.bind(n)}function N(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var O=function(){function e(e,t){void 0===t&&(t={}),this.tileset=e,this.nodesPerPage=e.nodePages.nodesPerPage,this.lodSelectionMetricType=e.nodePages.lodSelectionMetricType,this.options=t,this.nodePages=[],this.textureDefinitionsSelectedFormats=[],this._initSelectedFormatsForTextureDefinitions(e)}var t=e.prototype;return t.getNodeById=function(){var e=Object(i.a)(o.a.mark((function e(t){var n,r,i;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=Math.floor(t/this.nodesPerPage),this.nodePages[n]){e.next=7;break}return r=this.tileset.url+"/nodepages/"+n,this.nodePages[n]=Object(a.a)(r,A,this.options),e.next=6,this.nodePages[n];case 6:this.nodePages[n]=e.sent;case 7:if(!(this.nodePages[n]instanceof Promise)){e.next=11;break}return e.next=10,this.nodePages[n];case 10:this.nodePages[n]=e.sent;case 11:return i=t%this.nodesPerPage,e.abrupt("return",this.nodePages[n].nodes[i]);case 13:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),t.formTileFromNodePages=function(){var e=Object(i.a)(o.a.mark((function e(t){var n,r,i,a,s,u,_,l,c,R,T,A,p,f,d,N,O,m,h;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getNodeById(t);case 2:n=e.sent,r=[],i=S(n.children||[]);case 5:if((a=i()).done){e.next=13;break}return s=a.value,e.next=9,this.getNodeById(s);case 9:u=e.sent,r.push({id:s,obb:u.obb,mbs:E(u.obb)});case 11:e.next=5;break;case 13:return _=null,l=null,c=null,R="jpeg",T=[],A=!1,n&&n.mesh&&(p=n.mesh.geometry&&this._getContentUrl(n.mesh.geometry)||{url:null,isDracoGeometry:null},f=p.url,d=p.isDracoGeometry,_=f,A=d,N=this._getInformationFromMaterial(n.mesh.material),O=N[0],m=N[1],c=m,R=O.format||R,O.name&&(l=this.tileset.url+"/nodes/"+n.mesh.material.resource+"/textures/"+O.name),this.tileset.attributeStorageInfo&&(T=I(this.tileset,n.mesh.attribute.resource))),h=this._getLodSelection(n),e.abrupt("return",g({id:t,lodSelection:h,obb:n.obb,mbs:E(n.obb),contentUrl:_,textureUrl:l,attributeUrls:T,materialDefinition:c,textureFormat:R,children:r,isDracoGeometry:A}));case 22:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),t._getContentUrl=function(e){var t={},n=this.tileset.geometryDefinitions[e.definition],r=-1;if(this.options.i3s&&this.options.i3s.useDracoGeometry&&(r=n.geometryBuffers.findIndex((function(e){return e.compressedAttributes&&"draco"===e.compressedAttributes.encoding}))),-1===r&&(r=n.geometryBuffers.findIndex((function(e){return!e.compressedAttributes}))),-1!==r){var o=Boolean(n.geometryBuffers[r].compressedAttributes);t={url:this.tileset.url+"/nodes/"+e.resource+"/geometries/"+r,isDracoGeometry:o}}return t},t._getLodSelection=function(e){var t=[];return"maxScreenThresholdSQ"===this.lodSelectionMetricType&&t.push({metricType:"maxScreenThreshold",maxError:Math.sqrt(e.lodThreshold/(.25*Math.PI))}),t.push({metricType:this.lodSelectionMetricType,maxError:e.lodThreshold}),t},t._getInformationFromMaterial=function(e){var t={name:null,format:null};if(e){var n=this.tileset.materialDefinitions[e.definition],r=n&&n.pbrMetallicRoughness&&n.pbrMetallicRoughness.baseColorTexture&&n.pbrMetallicRoughness.baseColorTexture.textureSetDefinitionId;return r||0===r?[this.textureDefinitionsSelectedFormats[r]||t,n]:[t,n]}return[t,null]},t._initSelectedFormatsForTextureDefinitions=function(e){this.textureDefinitionsSelectedFormats=[];for(var t,n=this._getSupportedTextureFormats(),r=S(e.textureSetDefinitions||[]);!(t=r()).done;){for(var o,i=t.value,a=i&&i.formats||[],s=null,u=function(){var e=o.value,t=a.find((function(t){return t.format===e}));if(t)return s=t,"break"},_=S(n);!(o=_()).done;){if("break"===u())break}this.textureDefinitionsSelectedFormats.push(s)}},t._getSupportedTextureFormats=function(e){void 0===e&&(e={});var t=[];if(!this.options.i3s||this.options.i3s.useCompressedTextures){var n=Object(d.a)();n.has("etc2")&&t.push("ktx-etc2"),n.has("dxt")&&t.push("dds")}return t.push("jpg"),t.push("png"),t},e}(),m=new u.a;function h(e,t,n){return e.url=n.url,e.featureData&&(e.featureUrl=e.url+"/"+e.featureData[0].href),e.geometryData&&(e.contentUrl=e.url+"/"+e.geometryData[0].href),e.textureData&&(e.textureUrl=e.url+"/"+e.textureData[0].href),e.attributeData&&(e.attributeUrls=function(e){for(var t=e.url,n=e.attributeData,r=[],o=0;o<n.length;o++){var i=n[o].href.replace("./","");r.push(t+"/"+i)}return r}(e)),g(e)}function g(e){m.copy(e.mbs);var t=_.a.WGS84.cartographicToCartesian(e.mbs.slice(0,3));return e.boundingVolume={sphere:[].concat(Object(s.a)(t),[e.mbs[3]])},e.lodMetricType=e.lodSelection[0].metricType,e.lodMetricValue=e.lodSelection[0].maxError,e.transformMatrix=e.transform,e.type=l.f.MESH,e.refine=l.e.REPLACE,e}function C(e,t,n){return M.apply(this,arguments)}function M(){return(M=Object(i.a)(o.a.mark((function e(t,n,r){var i;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t.url=r.url,!t.nodePages){e.next=8;break}return t.nodePagesTile=new O(t,n),e.next=5,t.nodePagesTile.formTileFromNodePages(0);case 5:t.root=e.sent,e.next=12;break;case 8:return i=f(t.url+"/nodes/root",n.token),e.next=11,Object(a.a)(i,t.loader,{i3s:{loadContent:!1,isTileHeader:!0,isTileset:!1}});case 11:t.root=e.sent;case 12:t.basePath=t.url,t.type=l.c.I3S,t.lodMetricType=t.root.lodMetricType,t.lodMetricValue=t.root.lodMetricValue;case 16:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var b=n("rePB"),L=n("Nw31"),v=n("gQyj"),F=n("pUAI"),D=n("1Nab"),P=n("VBSM"),B=n("2Daz"),U=n("+PVp");function y(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return G(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return G(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0;return function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(n=e[Symbol.iterator]()).next.bind(n)}function G(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function x(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function H(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?x(Object(n),!0).forEach((function(t){Object(b.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):x(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var w=new u.a([0,0,0]),V={jpeg:v.a,png:v.a,"ktx-etc2":U.a,dds:U.a};function X(e,t,n,r){return j.apply(this,arguments)}function j(){return(j=Object(i.a)(o.a.mark((function e(t,n,r,i){var s,u;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n.content=n.content||{},n.userData=n.userData||{},n.content.featureData=Z(n,r),n.content.attributes={},!n.textureUrl){e.next=11;break}return s=f(n.textureUrl,i.token),u=V[n.textureFormat]||v.a,e.next=9,Object(a.a)(s,u);case 9:n.content.texture=e.sent,u===U.a&&(n.content.texture={compressed:!0,mipmaps:!1,width:n.content.texture[0].width,height:n.content.texture[0].height,data:n.content.texture});case 11:if(!i.i3s.loadFeatureAttributes||!r.attributeStorageInfo){e.next=14;break}return e.next=14,re(n,r);case 14:return n.content.material=$(n.materialDefinition,n.content.texture),e.next=17,W(t,n,i);case 17:return e.abrupt("return",e.sent);case 18:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function W(e,t,n){return k.apply(this,arguments)}function k(){return(k=Object(i.a)(o.a.mark((function e(t,n,r){var i,a,s,u,_,l,c,E,R,T,A,p,f,I,d,S,N,O,m,h,g,C,M,b,v,P,B,U,y,G;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(void 0===n&&(n={}),n.content){e.next=3;break}return e.abrupt("return",n);case 3:if(i=n.content,u=0,_=0,!n.isDracoGeometry){e.next=17;break}return e.next=9,Object(F.a)(t,D.a,{parseOptions:{attributeNameEntry:"i3s-attribute-type"}});case 9:l=e.sent,s=l.header.vertexCount,c=l.indices.value,E=l.attributes,R=E.POSITION,T=E.NORMAL,A=E.COLOR_0,p=E.TEXCOORD_0,f=E["feature-index"],a={position:K(R,c),normal:K(T,c),color:K(A,c),uv0:K(p,c),id:K(f,c)},f&&n.userData.objectIds&&ne(a,n.userData.objectIds),e.next=26;break;case 17:I=i.featureData,d=I.vertexAttributes,S=I.attributesOrder,N=I.featureAttributes,O=I.featureAttributeOrder,m=q(i,t),u=m.byteOffset,s=m.vertexCount,_=m.featureCount,h=Q(t,u,d,s,S),g=h.attributes,C=h.byteOffset,M=Q(t,C,N,_,O),te(b=M.attributes),a=Y(g,b);case 26:for(G in v=J(a.position,n),P=v.enuMatrix,B=v.cartographicOrigin,U=v.cartesianOrigin,y=(new L.a).multiplyRight(P),i.attributes={positions:a.position,normals:a.normal,colors:z(a.color),texCoords:a.uv0,featureIds:a.id,faceRange:a.faceRange},i.attributes)i.attributes[G]||delete i.attributes[G];return i.vertexCount=s,i.cartographicCenter=B,i.cartesianOrigin=U,i.modelMatrix=y.invert(),i.byteLength=t.byteLength,e.abrupt("return",n);case 36:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Y(e,t){return H(H({},e),t)}function K(e,t){if(!e)return null;for(var n=e.value.constructor,r=new n(t.length*e.size),o=0;o<t.length;o++){var i=t[o]*e.size;r.set(new n(e.value.buffer,i*e.value.BYTES_PER_ELEMENT,e.size),o*e.size)}return H(H({},e),{},{value:r})}function z(e){if(!e)return e;for(var t=new Float32Array(e.value.length),n=0;n<t.length;n++)t[n]=e.value[n]/255;return e.value=t,e}function Z(e,t){var n=t.store.defaultGeometrySchema,r=n;for(var o in B.c)for(var i in B.e){var a=n[o][i];if(a){var s=a.byteOffset,u=void 0===s?0:s,_=a.count,l=void 0===_?0:_,c=a.valueType,E=a.valuesPerElement;r[o][i]={valueType:c,valuesPerElement:E,byteOffset:u,count:l}}}return r.attributesOrder=n.ordering,r}function q(e,t){var n=0,r=0,o=0,i=e.featureData[B.d.header];for(var a in i){var s=i[a],u=s.property,_=s.type,l=B.i[_];u===B.d.vertexCount&&(r=new l(t,0,4)[0],n+=B.g[_]),u===B.d.featureCount&&(o=new l(t,4,4)[0],n+=B.g[_])}return{vertexCount:r,featureCount:o,byteOffset:n}}function Q(e,t,n,r,o){for(var i,a={},s=y(o);!(i=s()).done;){var u=i.value;if(n[u]){var _=n[u],l=_.valueType,c=_.valuesPerElement,E=r;if(t+E*c>e.byteLength)break;var R=new(0,B.i[l])(e.slice(t),0,E*c);switch(a[u]={value:R,type:B.b[l],size:c},u){case"color":a.color.normalized=!0}t+=E*c*B.g[l]}}return{attributes:a,byteOffset:t}}function J(e,t){var n=t.mbs,r=e.value,o=e.metadata,i=new L.a,a=new u.a(n[0],n[1],n[2]),s=new u.a;return _.a.WGS84.cartographicToCartesian(a,s),_.a.WGS84.eastNorthUpToFixedFrame(s,i),e.value=function(e,t,n){void 0===t&&(t={});for(var r=new Float64Array(e.length),o=t["i3s-scale_x"]&&t["i3s-scale_x"].double||1,i=t["i3s-scale_y"]&&t["i3s-scale_y"].double||1,a=0;a<r.length;a+=3)r[a]=e[a]*o+n.x,r[a+1]=e[a+1]*i+n.y,r[a+2]=e[a+2]+n.z;for(var s=0;s<r.length;s+=3)_.a.WGS84.cartographicToCartesian(r.subarray(s,s+3),w),r[s]=w.x,r[s+1]=w.y,r[s+2]=w.z;return r}(r,o,a),{enuMatrix:i,fixedFrameToENUMatrix:i.invert(),cartographicOrigin:a,cartesianOrigin:s}}function $(e,t){if(!e)return null;var n=H(H({},e),{},{pbrMetallicRoughness:e.pbrMetallicRoughness?H({},e.pbrMetallicRoughness):{baseColorFactor:[255,255,255,255]}});return n.alphaCutoff=n.alphaCutoff||.25,n.alphaMode&&(n.alphaMode=n.alphaMode.toUpperCase()),n.emissiveFactor&&(n.emissiveFactor=ee(n.emissiveFactor)),n.pbrMetallicRoughness&&n.pbrMetallicRoughness.baseColorFactor&&(n.pbrMetallicRoughness.baseColorFactor=ee(n.pbrMetallicRoughness.baseColorFactor)),function(e,t){var n={source:{image:t}};e.pbrMetallicRoughness&&e.pbrMetallicRoughness.baseColorTexture?e.pbrMetallicRoughness.baseColorTexture=H(H({},e.pbrMetallicRoughness.baseColorTexture),{},{texture:n}):e.emissiveTexture?e.emissiveTexture=H(H({},e.emissiveTexture),{},{texture:n}):e.pbrMetallicRoughness&&e.pbrMetallicRoughness.metallicRoughnessTexture?e.pbrMetallicRoughness.metallicRoughnessTexture=H(H({},e.pbrMetallicRoughness.metallicRoughnessTexture),{},{texture:n}):e.normalTexture?e.normalTexture=H(H({},e.normalTexture),{},{texture:n}):e.occlusionTexture&&(e.occlusionTexture=H(H({},e.occlusionTexture),{},{texture:n}))}(n,t),n}function ee(e){for(var t=Object(s.a)(e),n=0;n<e.length;n++)t[n]=e[n]/255;return t}function te(e){for(var t=e.id.value,n=e.faceRange.value,r=n[n.length-1]+1,o=new Uint32Array(3*r),i=0,a=0,s=1;s<n.length;s+=2){var u=Number(t[i]),_=a+3*(n[s]-n[s-1]+1);o.fill(u,a,_),i++,a=_}e.id.value=o}function ne(e,t){for(var n=e.id.value,r=new Float32Array(n.length),o=0;o<n.length;o++)r[o]=t[n[o]];e.id.value=r}function re(e,t){return oe.apply(this,arguments)}function oe(){return(oe=Object(i.a)(o.a.mark((function e(t,n){var r,i,s,u,_,l,c,E,R,T;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(r=n.attributeStorageInfo,i=t.attributeUrls,s=[],console.time("load attributes"),u=[],_=0;_<r.length;_++)l=i[_],c=r[_].name,E=ie(r[_]),R=Object(a.a)(l,P.a,{attributeName:c,attributeType:E}),u.push(R);return e.prev=6,e.next=9,Promise.all(u);case 9:s=e.sent,e.next=14;break;case 12:e.prev=12,e.t0=e.catch(6);case 14:return e.prev=14,console.timeEnd("load attributes"),e.finish(14);case 17:(T=s.find((function(e){return e.OBJECTID})))&&T.OBJECTID&&(t.userData.objectIds=T.OBJECTID,t.userData.attributesByObjectId=ae(s,r,T));case 19:case"end":return e.stop()}}),e,null,[[6,12,14,17]])})))).apply(this,arguments)}function ie(e){return e.hasOwnProperty("objectIds")?"Oid32":e.hasOwnProperty("attributeValues")?e.attributeValues.valueType:""}function ae(e,t,n){for(var r=new Map,o=0;o<n.OBJECTID.length;o++){var i=n.OBJECTID[o],a=se(e,o,t);r.set(i,a)}return r}function se(e,t,n){for(var r={},o=0;o<n.length;o++){var i=n[o].name,a=e[o][i];r[i]=ue(a,t)}return r}function ue(e,t){return e&&e[t]?e[t].toString().replace(/\u0000/g,""):""}var _e="undefined"!=typeof __VERSION__?__VERSION__:"latest",le=/layers\/[0-9]+$/,ce=/nodes\/([0-9-]+|root)$/,Ee={name:"I3S (Indexed Scene Layers)",id:"i3s",module:"i3s",version:_e,mimeTypes:["application/octet-stream"],parse:function(e,t,n,r){return Re.apply(this,arguments)},extensions:["bin"],options:{i3s:{loadContent:!0,isTileset:"auto",isTileHeader:"auto",tile:null,tileset:null,useDracoGeometry:!0,useCompressedTextures:!0,loadFeatureAttributes:!0}}};function Re(){return(Re=Object(i.a)(o.a.mark((function e(t,n,r,i){var s,u,_;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(s=r.url,n.i3s=n.i3s||{},u="auto"===n.i3s.isTileset?le.test(s):n.i3s.isTileset,_="auto"===n.isTileHeader?ce.test(s):n.i3s.isTileHeader,!u){e.next=10;break}return e.next=7,pe(t,n,r);case 7:t=e.sent,e.next=23;break;case 10:if(!_){e.next=20;break}return e.next=13,Ie(t,n,r);case 13:if(t=e.sent,!n.i3s.loadContent){e.next=18;break}return n.i3s.tile=t,e.next=18,Object(a.a)(t.contentUrl,Ee,n);case 18:e.next=23;break;case 20:return e.next=22,Te(t,n,r);case 22:t=e.sent;case 23:return e.abrupt("return",t);case 24:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Te(e,t,n){return Ae.apply(this,arguments)}function Ae(){return(Ae=Object(i.a)(o.a.mark((function e(t,n,r){var i,a,s;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return i=n.i3s,a=i.tile,s=i.tileset,a.content=a.content||{},a.userData=a.userData||{},e.next=5,X(t,a,s,n);case 5:return e.abrupt("return",a.content);case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function pe(e,t,n){return fe.apply(this,arguments)}function fe(){return(fe=Object(i.a)(o.a.mark((function e(t,n,r){var i;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(i=JSON.parse((new TextDecoder).decode(t))).loader=Ee,e.next=4,C(i,n,r);case 4:return e.abrupt("return",i);case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Ie(e,t,n){return de.apply(this,arguments)}function de(){return(de=Object(i.a)(o.a.mark((function e(t,n,r){return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=JSON.parse((new TextDecoder).decode(t)),e.abrupt("return",h(t,0,r));case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}},lf6B:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var r=n("JX7q"),o=n("dI71"),i=n("vOnD"),a=n("q1tI"),s=n.n(a),u=n("rlSs"),_=n("tuoA"),l=i.c.div.withConfig({displayName:"control-panel__Container",componentId:"sc-14q5t5u-0"})(["display:flex;flex-direction:column;position:absolute;top:0;right:0;width:300px;background:#fff;box-shadow:0 2px 4px rgba(0,0,0,0.3);padding:12px 18px;margin:20px;font-size:13px;line-height:2;outline:none;z-index:100;"]),c=i.c.select.withConfig({displayName:"control-panel__DropDown",componentId:"sc-14q5t5u-1"})(["margin-bottom:12px;"]),E=i.c.select.withConfig({displayName:"control-panel__TilesetDropDown",componentId:"sc-14q5t5u-2"})(["margin-bottom:12px;font-weight:800;font-size:16px;"]),R=i.c.div.withConfig({displayName:"control-panel__FrameWrap",componentId:"sc-14q5t5u-3"})(["height:fit-content;padding:0;overflow:hidden;"]),T=i.c.div.withConfig({displayName:"control-panel__FrameControl",componentId:"sc-14q5t5u-4"})(["margin:",";display:flex;flex-direction:row;align-items:center;justify-content:space-between;width:100%;"],(function(e){return e.showFullInfo?"12px 0":0})),A=i.c.div.withConfig({displayName:"control-panel__FrameButton",componentId:"sc-14q5t5u-5"})(["display:flex;padding:6px 12px;color:white;background:rgb(52,152,219);align-items:center;height:20px;&:hover{background:rgb(0,152,219);cursor:pointer;}"]),p=function(e){function t(t){var n;return(n=e.call(this,t)||this)._renderMapStyles=n._renderMapStyles.bind(Object(r.a)(n)),n._renderColoringModes=n._renderColoringModes.bind(Object(r.a)(n)),n.state={showFullInfo:!1},n}Object(o.a)(t,e);var n=t.prototype;return n._renderExamples=function(){var e=this,t=this.props,n=t.name,r=t.onExampleChange,o=n||"Custom example";return s.a.createElement(E,{value:o,onChange:function(t){var n=t.target.value;e.setState({selected:n}),r(u.a[n])}},!n&&s.a.createElement("option",{key:"custom-example",value:"custom-example"},"Custom example"),Object.keys(u.a).map((function(e){var t=u.a[e];return s.a.createElement("option",{key:e,value:t.name},t.name)})))},n._renderMapStyles=function(){var e=this.props,t=e.mapStyles,n=void 0===t?_.e:t,r=e.selectedMapStyle,o=e.onMapStyleChange;return s.a.createElement(c,{value:r,onChange:function(e){var t=e.target.value;o({selectedMapStyle:t})}},Object.keys(n).map((function(e){return s.a.createElement("option",{key:e,value:n[e]},e)})))},n._renderColoringModes=function(){var e=this.props,t=e.coloringModes,n=void 0===t?_.d:t,r=e.selectedColoringMode,o=e.onColoringModeChange;return o?s.a.createElement(c,{value:r,onChange:function(e){var t=e.target.value;o({selectedColoringMode:parseInt(t,10)})}},Object.keys(n).map((function(e){return s.a.createElement("option",{key:e,value:n[e]},e)}))):null},n._renderInfo=function(){var e=this,t=this.props,n=t.metadata,r=t.token,o=this.state.showFullInfo;if(!n)return null;var i="https://www.arcgis.com/home/item.html?id="+n.serviceItemId;return r&&(i=i+"&token="+r),s.a.createElement(R,null,s.a.createElement("iframe",{id:"tileset-info",title:"tileset-info",style:{display:o?"inherit":"none",height:500,width:"99%",border:"1px solid rgba(200, 200, 200, 100)"},src:i}),s.a.createElement(T,{showFullInfo:o},s.a.createElement(A,{onClick:function(){return e.setState({showFullInfo:!o})}},"Show ",o?"Less":"More"),s.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:i},"Go to ArcGIS")))},n.render=function(){return s.a.createElement(l,null,this._renderExamples(),this._renderMapStyles(),this._renderColoringModes(),this._renderInfo(),this.props.children)},t}(a.PureComponent);p.defaultProps={droppedFile:null,onChange:function(){}}},qTUp:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return _}));var r=n("o0o1"),o=n.n(r),i=(n("wcNg"),n("HaE+")),a=n("2Daz");function s(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return u(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return u(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0;return function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(n=e[Symbol.iterator]()).next.bind(n)}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function _(e,t){return l.apply(this,arguments)}function l(){return(l=Object(i.a)(o.a.mark((function e(t,n){var r,i,a;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(i=n.attributeName,a=n.attributeType,i){e.next=3;break}return e.abrupt("return",{});case 3:return e.abrupt("return",((r={})[i]=a?c(a,t):null,r));case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function c(t,n){switch(t){case a.h:return function(t){for(var n,r=new Uint32Array(t,0,4)[0],o=new Uint32Array(t,8,r),i=[],a=8+4*r,u=s(o);!(n=u()).done;){var _=n.value,l=e.from(t,a,_).toString();i.push(l),a+=_}return i}(n);case a.f:return E(n);case a.a:return function(e){return new Float64Array(e,8)}(n);default:return E(n)}}function E(e){return new Uint32Array(e,4)}}).call(this,n("HDXh").Buffer)},rlSs:function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return u}));var r=n("rePB");function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){Object(r.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var a={height:600,width:800,pitch:45,maxPitch:60,bearing:0,minZoom:2,maxZoom:30,zoom:14.5},s="San Francisco v1.6",u={"San Francisco v1.6":{name:"San Francisco v1.6",url:"https://tiles.arcgis.com/tiles/z2tnIkrLQ2BRzr6P/arcgis/rest/services/SanFrancisco_Bldgs/SceneServer/layers/0",viewport:i(i({},a),{},{longitude:-120,latitude:34})},"San Francisco v1.7":{name:"San Francisco v1.7",url:"https://tiles.arcgis.com/tiles/z2tnIkrLQ2BRzr6P/arcgis/rest/services/SanFrancisco_3DObjects_1_7/SceneServer/layers/0",viewport:i(i({},a),{},{longitude:-120,latitude:34})},"New York":{name:"New York",url:"https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_NewYork_17/SceneServer/layers/0",viewport:i(i({},a),{},{longitude:-74,latitude:40})}}},tuoA:function(e,t,n){"use strict";n.d(t,"e",(function(){return o})),n.d(t,"a",(function(){return i})),n.d(t,"c",(function(){return a})),n.d(t,"d",(function(){return s})),n.d(t,"b",(function(){return u}));var r=n("H4cH"),o={"Base Map: Satellite":"https://basemaps.cartocdn.com/gl/voyager-nolabels-gl-style/style.json","Base Map: Light":"https://basemaps.cartocdn.com/gl/positron-nolabels-gl-style/style.json","Base Map: Dark":"https://basemaps.cartocdn.com/gl/dark-matter-nolabels-gl-style/style.json"},i={"https://basemaps.cartocdn.com/gl/voyager-nolabels-gl-style/style.json":"https://basemaps.cartocdn.com/gl/dark-matter-nolabels-gl-style/style.json","https://basemaps.cartocdn.com/gl/positron-nolabels-gl-style/style.json":"https://basemaps.cartocdn.com/gl/dark-matter-nolabels-gl-style/style.json","https://basemaps.cartocdn.com/gl/dark-matter-nolabels-gl-style/style.json":"https://basemaps.cartocdn.com/gl/positron-nolabels-gl-style/style.json"},a=o["Base Map: Dark"],s={"Tile coloring: Original":r.a.ORIGINAL,"Tile coloring: By tile":r.a.TILE,"Tile coloring: By depth":r.a.DEPTH},u=r.a.TILE},"u/82":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n("dI71"),o=n("q1tI"),i=n.n(o),a={textAlign:"left"},s={color:"#fff"},u=function(e){function t(){return e.apply(this,arguments)||this}Object(r.a)(t,e);var n=t.prototype;return n.prepareRows=function(){var e=this.props.data,t=[];for(var n in e){var r=i.a.createElement("tr",{key:n},i.a.createElement("th",{style:a},n),i.a.createElement("td",null,this.formatTooltipValue(e[n])));t.push(r)}return t},n.formatTooltipValue=function(e){return e.toString().replace(/[{}']+/g,"").trim()||"No Data"},n.render=function(){var e=this.prepareRows();return e.length?i.a.createElement("div",{style:s},i.a.createElement("table",null,i.a.createElement("tbody",null,e))):null},t}(o.PureComponent);u.defaultProps={data:{}}}}]);