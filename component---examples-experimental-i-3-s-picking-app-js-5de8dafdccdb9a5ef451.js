(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"2Daz":function(e,t,n){"use strict";n.d(t,"i",(function(){return o})),n.d(t,"b",(function(){return i})),n.d(t,"e",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return _})),n.d(t,"g",(function(){return l})),n.d(t,"h",(function(){return u})),n.d(t,"f",(function(){return c})),n.d(t,"a",(function(){return E}));var r=n("Aabs"),o={UInt8:Uint8Array,UInt16:Uint16Array,UInt32:Uint32Array,Float32:Float32Array,UInt64:BigUint64Array},i={UInt8:r.a.UNSIGNED_BYTE,UInt16:r.a.UNSIGNED_INT,Float32:r.a.FLOAT,UInt32:r.a.UNSIGNED_INT,UInt64:r.a.DOUBLE},a={position:"position",normal:"normal",uv0:"uv0",color:"color",region:"region"},s={vertexAttributes:"vertexAttributes",featureAttributeOrder:"featureAttributeOrder",featureAttributes:"featureAttributes"},_={header:"header",vertexCount:"vertexCount",featureCount:"featureCount"},l={UInt8:1,UInt16:2,UInt32:4,Float32:4,UInt64:8},u="String",c="Oid32",E="Float64"},Aabs:function(e,t,n){"use strict";t.a={DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,FUNC_ADD:32774,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,BLEND_COLOR:32773,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,VENDOR:7936,RENDERER:7937,VERSION:7938,IMPLEMENTATION_COLOR_READ_TYPE:35738,IMPLEMENTATION_COLOR_READ_FORMAT:35739,BROWSER_DEFAULT_WEBGL:37444,STATIC_DRAW:35044,STREAM_DRAW:35040,DYNAMIC_DRAW:35048,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,CULL_FACE:2884,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,BLEND:3042,DEPTH_TEST:2929,DITHER:3024,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,SCISSOR_TEST:3089,STENCIL_TEST:2960,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CONTEXT_LOST_WEBGL:37442,CW:2304,CCW:2305,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DOUBLE:5130,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,COMPILE_STATUS:35713,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_ATTRIBUTES:35721,ACTIVE_UNIFORMS:35718,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,ALWAYS:519,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,GEQUAL:518,NOTEQUAL:517,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,TEXTURE_WIDTH:4096,TEXTURE_HEIGHT:4097,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,READ_FRAMEBUFFER:36008,DRAW_FRAMEBUFFER:36009,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,READ_BUFFER:3074,UNPACK_ROW_LENGTH:3314,UNPACK_SKIP_ROWS:3315,UNPACK_SKIP_PIXELS:3316,PACK_ROW_LENGTH:3330,PACK_SKIP_ROWS:3331,PACK_SKIP_PIXELS:3332,TEXTURE_BINDING_3D:32874,UNPACK_SKIP_IMAGES:32877,UNPACK_IMAGE_HEIGHT:32878,MAX_3D_TEXTURE_SIZE:32883,MAX_ELEMENTS_VERTICES:33e3,MAX_ELEMENTS_INDICES:33001,MAX_TEXTURE_LOD_BIAS:34045,MAX_FRAGMENT_UNIFORM_COMPONENTS:35657,MAX_VERTEX_UNIFORM_COMPONENTS:35658,MAX_ARRAY_TEXTURE_LAYERS:35071,MIN_PROGRAM_TEXEL_OFFSET:35076,MAX_PROGRAM_TEXEL_OFFSET:35077,MAX_VARYING_COMPONENTS:35659,FRAGMENT_SHADER_DERIVATIVE_HINT:35723,RASTERIZER_DISCARD:35977,VERTEX_ARRAY_BINDING:34229,MAX_VERTEX_OUTPUT_COMPONENTS:37154,MAX_FRAGMENT_INPUT_COMPONENTS:37157,MAX_SERVER_WAIT_TIMEOUT:37137,MAX_ELEMENT_INDEX:36203,RED:6403,RGB8:32849,RGBA8:32856,RGB10_A2:32857,TEXTURE_3D:32879,TEXTURE_WRAP_R:32882,TEXTURE_MIN_LOD:33082,TEXTURE_MAX_LOD:33083,TEXTURE_BASE_LEVEL:33084,TEXTURE_MAX_LEVEL:33085,TEXTURE_COMPARE_MODE:34892,TEXTURE_COMPARE_FUNC:34893,SRGB:35904,SRGB8:35905,SRGB8_ALPHA8:35907,COMPARE_REF_TO_TEXTURE:34894,RGBA32F:34836,RGB32F:34837,RGBA16F:34842,RGB16F:34843,TEXTURE_2D_ARRAY:35866,TEXTURE_BINDING_2D_ARRAY:35869,R11F_G11F_B10F:35898,RGB9_E5:35901,RGBA32UI:36208,RGB32UI:36209,RGBA16UI:36214,RGB16UI:36215,RGBA8UI:36220,RGB8UI:36221,RGBA32I:36226,RGB32I:36227,RGBA16I:36232,RGB16I:36233,RGBA8I:36238,RGB8I:36239,RED_INTEGER:36244,RGB_INTEGER:36248,RGBA_INTEGER:36249,R8:33321,RG8:33323,R16F:33325,R32F:33326,RG16F:33327,RG32F:33328,R8I:33329,R8UI:33330,R16I:33331,R16UI:33332,R32I:33333,R32UI:33334,RG8I:33335,RG8UI:33336,RG16I:33337,RG16UI:33338,RG32I:33339,RG32UI:33340,R8_SNORM:36756,RG8_SNORM:36757,RGB8_SNORM:36758,RGBA8_SNORM:36759,RGB10_A2UI:36975,TEXTURE_IMMUTABLE_FORMAT:37167,TEXTURE_IMMUTABLE_LEVELS:33503,UNSIGNED_INT_2_10_10_10_REV:33640,UNSIGNED_INT_10F_11F_11F_REV:35899,UNSIGNED_INT_5_9_9_9_REV:35902,FLOAT_32_UNSIGNED_INT_24_8_REV:36269,UNSIGNED_INT_24_8:34042,HALF_FLOAT:5131,RG:33319,RG_INTEGER:33320,INT_2_10_10_10_REV:36255,CURRENT_QUERY:34917,QUERY_RESULT:34918,QUERY_RESULT_AVAILABLE:34919,ANY_SAMPLES_PASSED:35887,ANY_SAMPLES_PASSED_CONSERVATIVE:36202,MAX_DRAW_BUFFERS:34852,DRAW_BUFFER0:34853,DRAW_BUFFER1:34854,DRAW_BUFFER2:34855,DRAW_BUFFER3:34856,DRAW_BUFFER4:34857,DRAW_BUFFER5:34858,DRAW_BUFFER6:34859,DRAW_BUFFER7:34860,DRAW_BUFFER8:34861,DRAW_BUFFER9:34862,DRAW_BUFFER10:34863,DRAW_BUFFER11:34864,DRAW_BUFFER12:34865,DRAW_BUFFER13:34866,DRAW_BUFFER14:34867,DRAW_BUFFER15:34868,MAX_COLOR_ATTACHMENTS:36063,COLOR_ATTACHMENT1:36065,COLOR_ATTACHMENT2:36066,COLOR_ATTACHMENT3:36067,COLOR_ATTACHMENT4:36068,COLOR_ATTACHMENT5:36069,COLOR_ATTACHMENT6:36070,COLOR_ATTACHMENT7:36071,COLOR_ATTACHMENT8:36072,COLOR_ATTACHMENT9:36073,COLOR_ATTACHMENT10:36074,COLOR_ATTACHMENT11:36075,COLOR_ATTACHMENT12:36076,COLOR_ATTACHMENT13:36077,COLOR_ATTACHMENT14:36078,COLOR_ATTACHMENT15:36079,SAMPLER_3D:35679,SAMPLER_2D_SHADOW:35682,SAMPLER_2D_ARRAY:36289,SAMPLER_2D_ARRAY_SHADOW:36292,SAMPLER_CUBE_SHADOW:36293,INT_SAMPLER_2D:36298,INT_SAMPLER_3D:36299,INT_SAMPLER_CUBE:36300,INT_SAMPLER_2D_ARRAY:36303,UNSIGNED_INT_SAMPLER_2D:36306,UNSIGNED_INT_SAMPLER_3D:36307,UNSIGNED_INT_SAMPLER_CUBE:36308,UNSIGNED_INT_SAMPLER_2D_ARRAY:36311,MAX_SAMPLES:36183,SAMPLER_BINDING:35097,PIXEL_PACK_BUFFER:35051,PIXEL_UNPACK_BUFFER:35052,PIXEL_PACK_BUFFER_BINDING:35053,PIXEL_UNPACK_BUFFER_BINDING:35055,COPY_READ_BUFFER:36662,COPY_WRITE_BUFFER:36663,COPY_READ_BUFFER_BINDING:36662,COPY_WRITE_BUFFER_BINDING:36663,FLOAT_MAT2x3:35685,FLOAT_MAT2x4:35686,FLOAT_MAT3x2:35687,FLOAT_MAT3x4:35688,FLOAT_MAT4x2:35689,FLOAT_MAT4x3:35690,UNSIGNED_INT_VEC2:36294,UNSIGNED_INT_VEC3:36295,UNSIGNED_INT_VEC4:36296,UNSIGNED_NORMALIZED:35863,SIGNED_NORMALIZED:36764,VERTEX_ATTRIB_ARRAY_INTEGER:35069,VERTEX_ATTRIB_ARRAY_DIVISOR:35070,TRANSFORM_FEEDBACK_BUFFER_MODE:35967,MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS:35968,TRANSFORM_FEEDBACK_VARYINGS:35971,TRANSFORM_FEEDBACK_BUFFER_START:35972,TRANSFORM_FEEDBACK_BUFFER_SIZE:35973,TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN:35976,MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS:35978,MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS:35979,INTERLEAVED_ATTRIBS:35980,SEPARATE_ATTRIBS:35981,TRANSFORM_FEEDBACK_BUFFER:35982,TRANSFORM_FEEDBACK_BUFFER_BINDING:35983,TRANSFORM_FEEDBACK:36386,TRANSFORM_FEEDBACK_PAUSED:36387,TRANSFORM_FEEDBACK_ACTIVE:36388,TRANSFORM_FEEDBACK_BINDING:36389,FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING:33296,FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE:33297,FRAMEBUFFER_ATTACHMENT_RED_SIZE:33298,FRAMEBUFFER_ATTACHMENT_GREEN_SIZE:33299,FRAMEBUFFER_ATTACHMENT_BLUE_SIZE:33300,FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE:33301,FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE:33302,FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE:33303,FRAMEBUFFER_DEFAULT:33304,DEPTH24_STENCIL8:35056,DRAW_FRAMEBUFFER_BINDING:36006,READ_FRAMEBUFFER_BINDING:36010,RENDERBUFFER_SAMPLES:36011,FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER:36052,FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:36182,UNIFORM_BUFFER:35345,UNIFORM_BUFFER_BINDING:35368,UNIFORM_BUFFER_START:35369,UNIFORM_BUFFER_SIZE:35370,MAX_VERTEX_UNIFORM_BLOCKS:35371,MAX_FRAGMENT_UNIFORM_BLOCKS:35373,MAX_COMBINED_UNIFORM_BLOCKS:35374,MAX_UNIFORM_BUFFER_BINDINGS:35375,MAX_UNIFORM_BLOCK_SIZE:35376,MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS:35377,MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS:35379,UNIFORM_BUFFER_OFFSET_ALIGNMENT:35380,ACTIVE_UNIFORM_BLOCKS:35382,UNIFORM_TYPE:35383,UNIFORM_SIZE:35384,UNIFORM_BLOCK_INDEX:35386,UNIFORM_OFFSET:35387,UNIFORM_ARRAY_STRIDE:35388,UNIFORM_MATRIX_STRIDE:35389,UNIFORM_IS_ROW_MAJOR:35390,UNIFORM_BLOCK_BINDING:35391,UNIFORM_BLOCK_DATA_SIZE:35392,UNIFORM_BLOCK_ACTIVE_UNIFORMS:35394,UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES:35395,UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER:35396,UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER:35398,OBJECT_TYPE:37138,SYNC_CONDITION:37139,SYNC_STATUS:37140,SYNC_FLAGS:37141,SYNC_FENCE:37142,SYNC_GPU_COMMANDS_COMPLETE:37143,UNSIGNALED:37144,SIGNALED:37145,ALREADY_SIGNALED:37146,TIMEOUT_EXPIRED:37147,CONDITION_SATISFIED:37148,WAIT_FAILED:37149,SYNC_FLUSH_COMMANDS_BIT:1,COLOR:6144,DEPTH:6145,STENCIL:6146,MIN:32775,MAX:32776,DEPTH_COMPONENT24:33190,STREAM_READ:35041,STREAM_COPY:35042,STATIC_READ:35045,STATIC_COPY:35046,DYNAMIC_READ:35049,DYNAMIC_COPY:35050,DEPTH_COMPONENT32F:36012,DEPTH32F_STENCIL8:36013,INVALID_INDEX:4294967295,TIMEOUT_IGNORED:-1,MAX_CLIENT_WAIT_TIMEOUT_WEBGL:37447,VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE:35070,UNMASKED_VENDOR_WEBGL:37445,UNMASKED_RENDERER_WEBGL:37446,MAX_TEXTURE_MAX_ANISOTROPY_EXT:34047,TEXTURE_MAX_ANISOTROPY_EXT:34046,COMPRESSED_RGB_S3TC_DXT1_EXT:33776,COMPRESSED_RGBA_S3TC_DXT1_EXT:33777,COMPRESSED_RGBA_S3TC_DXT3_EXT:33778,COMPRESSED_RGBA_S3TC_DXT5_EXT:33779,COMPRESSED_R11_EAC:37488,COMPRESSED_SIGNED_R11_EAC:37489,COMPRESSED_RG11_EAC:37490,COMPRESSED_SIGNED_RG11_EAC:37491,COMPRESSED_RGB8_ETC2:37492,COMPRESSED_RGBA8_ETC2_EAC:37493,COMPRESSED_SRGB8_ETC2:37494,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:37495,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:37496,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:37497,COMPRESSED_RGB_PVRTC_4BPPV1_IMG:35840,COMPRESSED_RGBA_PVRTC_4BPPV1_IMG:35842,COMPRESSED_RGB_PVRTC_2BPPV1_IMG:35841,COMPRESSED_RGBA_PVRTC_2BPPV1_IMG:35843,COMPRESSED_RGB_ETC1_WEBGL:36196,COMPRESSED_RGB_ATC_WEBGL:35986,COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL:35986,COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL:34798,UNSIGNED_INT_24_8_WEBGL:34042,HALF_FLOAT_OES:36193,RGBA32F_EXT:34836,RGB32F_EXT:34837,FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT:33297,UNSIGNED_NORMALIZED_EXT:35863,MIN_EXT:32775,MAX_EXT:32776,SRGB_EXT:35904,SRGB_ALPHA_EXT:35906,SRGB8_ALPHA8_EXT:35907,FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT:33296,FRAGMENT_SHADER_DERIVATIVE_HINT_OES:35723,COLOR_ATTACHMENT0_WEBGL:36064,COLOR_ATTACHMENT1_WEBGL:36065,COLOR_ATTACHMENT2_WEBGL:36066,COLOR_ATTACHMENT3_WEBGL:36067,COLOR_ATTACHMENT4_WEBGL:36068,COLOR_ATTACHMENT5_WEBGL:36069,COLOR_ATTACHMENT6_WEBGL:36070,COLOR_ATTACHMENT7_WEBGL:36071,COLOR_ATTACHMENT8_WEBGL:36072,COLOR_ATTACHMENT9_WEBGL:36073,COLOR_ATTACHMENT10_WEBGL:36074,COLOR_ATTACHMENT11_WEBGL:36075,COLOR_ATTACHMENT12_WEBGL:36076,COLOR_ATTACHMENT13_WEBGL:36077,COLOR_ATTACHMENT14_WEBGL:36078,COLOR_ATTACHMENT15_WEBGL:36079,DRAW_BUFFER0_WEBGL:34853,DRAW_BUFFER1_WEBGL:34854,DRAW_BUFFER2_WEBGL:34855,DRAW_BUFFER3_WEBGL:34856,DRAW_BUFFER4_WEBGL:34857,DRAW_BUFFER5_WEBGL:34858,DRAW_BUFFER6_WEBGL:34859,DRAW_BUFFER7_WEBGL:34860,DRAW_BUFFER8_WEBGL:34861,DRAW_BUFFER9_WEBGL:34862,DRAW_BUFFER10_WEBGL:34863,DRAW_BUFFER11_WEBGL:34864,DRAW_BUFFER12_WEBGL:34865,DRAW_BUFFER13_WEBGL:34866,DRAW_BUFFER14_WEBGL:34867,DRAW_BUFFER15_WEBGL:34868,MAX_COLOR_ATTACHMENTS_WEBGL:36063,MAX_DRAW_BUFFERS_WEBGL:34852,VERTEX_ARRAY_BINDING_OES:34229,QUERY_COUNTER_BITS_EXT:34916,CURRENT_QUERY_EXT:34917,QUERY_RESULT_EXT:34918,QUERY_RESULT_AVAILABLE_EXT:34919,TIME_ELAPSED_EXT:35007,TIMESTAMP_EXT:36392,GPU_DISJOINT_EXT:36795}},"W/y+":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return bt})),n.d(t,"renderToDOM",(function(){return Mt}));var r=n("o0o1"),o=n.n(r),i=(n("wcNg"),n("HaE+")),a=n("JX7q"),s=n("dI71"),_=n("rePB"),l=n("q1tI"),u=n.n(l),c=n("i8i4"),E=n("UP1k"),R=n("rta6"),T=n("yYqN"),p=n("Wium"),A=n("BENj"),f=n("Aabs"),S=n("0i8A"),d=n("V3d6"),I=n("G8qk"),N=n("Jh/b"),O=n("+w+S"),h="#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\n\nstruct AmbientLight {\n vec3 color;\n};\n\nstruct PointLight {\n vec3 color;\n vec3 position;\n vec3 attenuation;\n};\n\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\n\nuniform AmbientLight lighting_uAmbientLight;\nuniform PointLight lighting_uPointLight[MAX_LIGHTS];\nuniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];\nuniform int lighting_uPointLightCount;\nuniform int lighting_uDirectionalLightCount;\n\nuniform bool lighting_uEnabled;\n\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n\n#endif\n",m={name:"lights",vs:h,fs:h,getUniforms:function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:C;if("lightSources"in t){var n=t.lightSources||{},r=n.ambientLight,o=n.pointLights,i=n.directionalLights,a=r||o&&o.length>0||i&&i.length>0;return a?Object.assign({},b({ambientLight:r,pointLights:o,directionalLights:i}),{lighting_uEnabled:!0}):{lighting_uEnabled:!1}}if("lights"in t){var s={pointLights:[],directionalLights:[]},_=!0,l=!1,u=void 0;try{for(var c,E=(t.lights||[])[Symbol.iterator]();!(_=(c=E.next()).done);_=!0){var R=c.value;switch(R.type){case"ambient":s.ambientLight=R;break;case"directional":s.directionalLights.push(R);break;case"point":s.pointLights.push(R)}}}catch(T){l=!0,u=T}finally{try{_||null==E.return||E.return()}finally{if(l)throw u}}return e({lightSources:s})}return{}},defines:{MAX_LIGHTS:3}},C={};function g(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.color,n=void 0===t?[0,0,0]:t,r=e.intensity,o=void 0===r?1:r;return n.map((function(e){return e*o/255}))}function b(e){var t=e.ambientLight,n=e.pointLights,r=void 0===n?[]:n,o=e.directionalLights,i=void 0===o?[]:o,a={};return a["lighting_uAmbientLight.color"]=t?g(t):[0,0,0],r.forEach((function(e,t){a["lighting_uPointLight[".concat(t,"].color")]=g(e),a["lighting_uPointLight[".concat(t,"].position")]=e.position,a["lighting_uPointLight[".concat(t,"].attenuation")]=e.attenuation||[1,0,0]})),a.lighting_uPointLightCount=r.length,i.forEach((function(e,t){a["lighting_uDirectionalLight[".concat(t,"].color")]=g(e),a["lighting_uDirectionalLight[".concat(t,"].direction")]=e.direction})),a.lighting_uDirectionalLightCount=i.length,a}var M={name:"pbr",vs:"uniform mat4 u_MVPMatrix;\nuniform mat4 u_ModelMatrix;\nuniform mat4 u_NormalMatrix;\n\nvarying vec3 pbr_vPosition;\nvarying vec2 pbr_vUV;\n\n#ifdef HAS_NORMALS\n# ifdef HAS_TANGENTS\nvarying mat3 pbr_vTBN;\n# else\nvarying vec3 pbr_vNormal;\n# endif\n#endif\n\nvoid pbr_setPositionNormalTangentUV(vec4 position, vec4 normal, vec4 tangent, vec2 uv)\n{\n  vec4 pos = u_ModelMatrix * position;\n  pbr_vPosition = vec3(pos.xyz) / pos.w;\n\n#ifdef HAS_NORMALS\n#ifdef HAS_TANGENTS\n  vec3 normalW = normalize(vec3(u_NormalMatrix * vec4(normal.xyz, 0.0)));\n  vec3 tangentW = normalize(vec3(u_ModelMatrix * vec4(tangent.xyz, 0.0)));\n  vec3 bitangentW = cross(normalW, tangentW) * tangent.w;\n  pbr_vTBN = mat3(tangentW, bitangentW, normalW);\n#else\n  pbr_vNormal = normalize(vec3(u_ModelMatrix * vec4(normal.xyz, 0.0)));\n#endif\n#endif\n\n#ifdef HAS_UV\n  pbr_vUV = uv;\n#else\n  pbr_vUV = vec2(0.,0.);\n#endif\n}\n",fs:"#if (__VERSION__ < 300)\n#extension GL_EXT_shader_texture_lod: enable\n#extension GL_OES_standard_derivatives : enable\n#endif\n\n\n#if (__VERSION__ < 300)\n  #define SMART_FOR(INIT, WEBGL1COND, WEBGL2COND, INCR) for (INIT; WEBGL1COND; INCR)\n#else\n  #define SMART_FOR(INIT, WEBGL1COND, WEBGL2COND, INCR) for (INIT; WEBGL2COND; INCR)\n#endif\n\nprecision highp float;\n\n#ifdef USE_IBL\nuniform samplerCube u_DiffuseEnvSampler;\nuniform samplerCube u_SpecularEnvSampler;\nuniform sampler2D u_brdfLUT;\nuniform vec2 u_ScaleIBLAmbient;\n#endif\n\n#ifdef HAS_BASECOLORMAP\nuniform sampler2D u_BaseColorSampler;\n#endif\n#ifdef HAS_NORMALMAP\nuniform sampler2D u_NormalSampler;\nuniform float u_NormalScale;\n#endif\n#ifdef HAS_EMISSIVEMAP\nuniform sampler2D u_EmissiveSampler;\nuniform vec3 u_EmissiveFactor;\n#endif\n#ifdef HAS_METALROUGHNESSMAP\nuniform sampler2D u_MetallicRoughnessSampler;\n#endif\n#ifdef HAS_OCCLUSIONMAP\nuniform sampler2D u_OcclusionSampler;\nuniform float u_OcclusionStrength;\n#endif\n\n#ifdef ALPHA_CUTOFF\nuniform float u_AlphaCutoff;\n#endif\n\nuniform vec2 u_MetallicRoughnessValues;\nuniform vec4 u_BaseColorFactor;\n\nuniform vec3 u_Camera;\n#ifdef PBR_DEBUG\nuniform vec4 u_ScaleDiffBaseMR;\nuniform vec4 u_ScaleFGDSpec;\n#endif\n\nvarying vec3 pbr_vPosition;\n\nvarying vec2 pbr_vUV;\n\n#ifdef HAS_NORMALS\n#ifdef HAS_TANGENTS\nvarying mat3 pbr_vTBN;\n#else\nvarying vec3 pbr_vNormal;\n#endif\n#endif\n\n\nstruct PBRInfo\n{\n  float NdotL;\n  float NdotV;\n  float NdotH;\n  float LdotH;\n  float VdotH;\n  float perceptualRoughness;\n  float metalness;\n  vec3 reflectance0;\n  vec3 reflectance90;\n  float alphaRoughness;\n  vec3 diffuseColor;\n  vec3 specularColor;\n  vec3 n;\n  vec3 v;\n};\n\nconst float M_PI = 3.141592653589793;\nconst float c_MinRoughness = 0.04;\n\nvec4 SRGBtoLINEAR(vec4 srgbIn)\n{\n#ifdef MANUAL_SRGB\n#ifdef SRGB_FAST_APPROXIMATION\n  vec3 linOut = pow(srgbIn.xyz,vec3(2.2));\n#else\n  vec3 bLess = step(vec3(0.04045),srgbIn.xyz);\n  vec3 linOut = mix( srgbIn.xyz/vec3(12.92), pow((srgbIn.xyz+vec3(0.055))/vec3(1.055),vec3(2.4)), bLess );\n#endif\n  return vec4(linOut,srgbIn.w);;\n#else\n  return srgbIn;\n#endif\n}\n\nvec3 getNormal()\n{\n#ifndef HAS_TANGENTS\n  vec3 pos_dx = dFdx(pbr_vPosition);\n  vec3 pos_dy = dFdy(pbr_vPosition);\n  vec3 tex_dx = dFdx(vec3(pbr_vUV, 0.0));\n  vec3 tex_dy = dFdy(vec3(pbr_vUV, 0.0));\n  vec3 t = (tex_dy.t * pos_dx - tex_dx.t * pos_dy) / (tex_dx.s * tex_dy.t - tex_dy.s * tex_dx.t);\n\n#ifdef HAS_NORMALS\n  vec3 ng = normalize(pbr_vNormal);\n#else\n  vec3 ng = cross(pos_dx, pos_dy);\n#endif\n\n  t = normalize(t - ng * dot(ng, t));\n  vec3 b = normalize(cross(ng, t));\n  mat3 tbn = mat3(t, b, ng);\n#else\n  mat3 tbn = pbr_vTBN;\n#endif\n\n#ifdef HAS_NORMALMAP\n  vec3 n = texture2D(u_NormalSampler, pbr_vUV).rgb;\n  n = normalize(tbn * ((2.0 * n - 1.0) * vec3(u_NormalScale, u_NormalScale, 1.0)));\n#else\n  vec3 n = normalize(tbn[2].xyz);\n#endif\n\n  return n;\n}\n\n\n#ifdef USE_IBL\nvec3 getIBLContribution(PBRInfo pbrInputs, vec3 n, vec3 reflection)\n{\n  float mipCount = 9.0;\n  float lod = (pbrInputs.perceptualRoughness * mipCount);\n  vec3 brdf = SRGBtoLINEAR(texture2D(u_brdfLUT,\n    vec2(pbrInputs.NdotV, 1.0 - pbrInputs.perceptualRoughness))).rgb;\n  vec3 diffuseLight = SRGBtoLINEAR(textureCube(u_DiffuseEnvSampler, n)).rgb;\n\n#ifdef USE_TEX_LOD\n  vec3 specularLight = SRGBtoLINEAR(textureCubeLodEXT(u_SpecularEnvSampler, reflection, lod)).rgb;\n#else\n  vec3 specularLight = SRGBtoLINEAR(textureCube(u_SpecularEnvSampler, reflection)).rgb;\n#endif\n\n  vec3 diffuse = diffuseLight * pbrInputs.diffuseColor;\n  vec3 specular = specularLight * (pbrInputs.specularColor * brdf.x + brdf.y);\n  diffuse *= u_ScaleIBLAmbient.x;\n  specular *= u_ScaleIBLAmbient.y;\n\n  return diffuse + specular;\n}\n#endif\n\n\nvec3 diffuse(PBRInfo pbrInputs)\n{\n  return pbrInputs.diffuseColor / M_PI;\n}\n\nvec3 specularReflection(PBRInfo pbrInputs)\n{\n  return pbrInputs.reflectance0 +\n    (pbrInputs.reflectance90 - pbrInputs.reflectance0) *\n    pow(clamp(1.0 - pbrInputs.VdotH, 0.0, 1.0), 5.0);\n}\n\n\n\nfloat geometricOcclusion(PBRInfo pbrInputs)\n{\n  float NdotL = pbrInputs.NdotL;\n  float NdotV = pbrInputs.NdotV;\n  float r = pbrInputs.alphaRoughness;\n\n  float attenuationL = 2.0 * NdotL / (NdotL + sqrt(r * r + (1.0 - r * r) * (NdotL * NdotL)));\n  float attenuationV = 2.0 * NdotV / (NdotV + sqrt(r * r + (1.0 - r * r) * (NdotV * NdotV)));\n  return attenuationL * attenuationV;\n}\n\n\n\n\n\nfloat microfacetDistribution(PBRInfo pbrInputs)\n{\n  float roughnessSq = pbrInputs.alphaRoughness * pbrInputs.alphaRoughness;\n  float f = (pbrInputs.NdotH * roughnessSq - pbrInputs.NdotH) * pbrInputs.NdotH + 1.0;\n  return roughnessSq / (M_PI * f * f);\n}\n\nvoid PBRInfo_setAmbientLight(inout PBRInfo pbrInputs) {\n  pbrInputs.NdotL = 1.0;\n  pbrInputs.NdotH = 0.0;\n  pbrInputs.LdotH = 0.0;\n  pbrInputs.VdotH = 1.0;\n}\n\nvoid PBRInfo_setDirectionalLight(inout PBRInfo pbrInputs, vec3 lightDirection) {\n  vec3 n = pbrInputs.n;\n  vec3 v = pbrInputs.v;\n  vec3 l = normalize(lightDirection);\n  vec3 h = normalize(l+v);\n\n  pbrInputs.NdotL = clamp(dot(n, l), 0.001, 1.0);\n  pbrInputs.NdotH = clamp(dot(n, h), 0.0, 1.0);\n  pbrInputs.LdotH = clamp(dot(l, h), 0.0, 1.0);\n  pbrInputs.VdotH = clamp(dot(v, h), 0.0, 1.0);\n}\n\nvoid PBRInfo_setPointLight(inout PBRInfo pbrInputs, PointLight pointLight) {\n  vec3 light_direction = normalize(pointLight.position - pbr_vPosition);\n  PBRInfo_setDirectionalLight(pbrInputs, light_direction);\n}\n\nvec3 calculateFinalColor(PBRInfo pbrInputs, vec3 lightColor) {\n  vec3 F = specularReflection(pbrInputs);\n  float G = geometricOcclusion(pbrInputs);\n  float D = microfacetDistribution(pbrInputs);\n  vec3 diffuseContrib = (1.0 - F) * diffuse(pbrInputs);\n  vec3 specContrib = F * G * D / (4.0 * pbrInputs.NdotL * pbrInputs.NdotV);\n  return pbrInputs.NdotL * lightColor * (diffuseContrib + specContrib);\n}\n\nvec4 pbr_filterColor(vec4 colorUnused)\n{\n\n\n  float perceptualRoughness = u_MetallicRoughnessValues.y;\n  float metallic = u_MetallicRoughnessValues.x;\n#ifdef HAS_METALROUGHNESSMAP\n\n  vec4 mrSample = texture2D(u_MetallicRoughnessSampler, pbr_vUV);\n  perceptualRoughness = mrSample.g * perceptualRoughness;\n  metallic = mrSample.b * metallic;\n#endif\n  perceptualRoughness = clamp(perceptualRoughness, c_MinRoughness, 1.0);\n  metallic = clamp(metallic, 0.0, 1.0);\n\n  float alphaRoughness = perceptualRoughness * perceptualRoughness;\n#ifdef HAS_BASECOLORMAP\n  vec4 baseColor = SRGBtoLINEAR(texture2D(u_BaseColorSampler, pbr_vUV)) * u_BaseColorFactor;\n#else\n  vec4 baseColor = u_BaseColorFactor;\n#endif\n\n#ifdef ALPHA_CUTOFF\n  if (baseColor.a < u_AlphaCutoff) {\n    discard;\n  }\n#endif\n\n  vec3 f0 = vec3(0.04);\n  vec3 diffuseColor = baseColor.rgb * (vec3(1.0) - f0);\n  diffuseColor *= 1.0 - metallic;\n  vec3 specularColor = mix(f0, baseColor.rgb, metallic);\n  float reflectance = max(max(specularColor.r, specularColor.g), specularColor.b);\n\n\n\n  float reflectance90 = clamp(reflectance * 25.0, 0.0, 1.0);\n  vec3 specularEnvironmentR0 = specularColor.rgb;\n  vec3 specularEnvironmentR90 = vec3(1.0, 1.0, 1.0) * reflectance90;\n\n  vec3 n = getNormal();\n  vec3 v = normalize(u_Camera - pbr_vPosition);\n\n  float NdotV = clamp(abs(dot(n, v)), 0.001, 1.0);\n  vec3 reflection = -normalize(reflect(v, n));\n\n  PBRInfo pbrInputs = PBRInfo(\n    0.0,\n    NdotV,\n    0.0,\n    0.0,\n    0.0,\n    perceptualRoughness,\n    metallic,\n    specularEnvironmentR0,\n    specularEnvironmentR90,\n    alphaRoughness,\n    diffuseColor,\n    specularColor,\n    n,\n    v\n  );\n\n  vec3 color = vec3(0, 0, 0);\n\n#ifdef USE_LIGHTS\n  PBRInfo_setAmbientLight(pbrInputs);\n  color += calculateFinalColor(pbrInputs, lighting_uAmbientLight.color);\n  SMART_FOR(int i = 0, i < MAX_LIGHTS, i < lighting_uDirectionalLightCount, i++) {\n    if (i < lighting_uDirectionalLightCount) {\n      PBRInfo_setDirectionalLight(pbrInputs, lighting_uDirectionalLight[i].direction);\n      color += calculateFinalColor(pbrInputs, lighting_uDirectionalLight[i].color);\n    }\n  }\n  SMART_FOR(int i = 0, i < MAX_LIGHTS, i < lighting_uPointLightCount, i++) {\n    if (i < lighting_uPointLightCount) {\n      PBRInfo_setPointLight(pbrInputs, lighting_uPointLight[i]);\n      float attenuation = getPointLightAttenuation(lighting_uPointLight[i], distance(lighting_uPointLight[i].position, pbr_vPosition));\n      color += calculateFinalColor(pbrInputs, lighting_uPointLight[i].color / attenuation);\n    }\n  }\n#endif\n#ifdef USE_IBL\n  color += getIBLContribution(pbrInputs, n, reflection);\n#endif\n#ifdef HAS_OCCLUSIONMAP\n  float ao = texture2D(u_OcclusionSampler, pbr_vUV).r;\n  color = mix(color, color * ao, u_OcclusionStrength);\n#endif\n\n#ifdef HAS_EMISSIVEMAP\n  vec3 emissive = SRGBtoLINEAR(texture2D(u_EmissiveSampler, pbr_vUV)).rgb * u_EmissiveFactor;\n  color += emissive;\n#endif\n\n#ifdef PBR_DEBUG\n\n\n\n\n\n  color = mix(color, baseColor.rgb, u_ScaleDiffBaseMR.y);\n  color = mix(color, vec3(metallic), u_ScaleDiffBaseMR.z);\n  color = mix(color, vec3(perceptualRoughness), u_ScaleDiffBaseMR.w);\n#endif\n\n  return vec4(pow(color,vec3(1.0/2.2)), baseColor.a);\n}\n",defines:{LIGHTING_FRAGMENT:1},dependencies:[m]},L=n("ykdB"),v=n("d3kR"),F=n("tMmZ"),P=n("f5Sf"),D=n("iein");function B(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}var U=function(){function e(e,t){var n=t.attributes,r=t.material,o=t.pbrDebug,i=t.imageBasedLightingEnvironment,a=t.lights,s=t.useTangents;this.gl=e,this.defines={MANUAL_SRGB:1,SRGB_FAST_APPROXIMATION:1},Object(v.b)(e,F.a.GLSL_TEXTURE_LOD)&&(this.defines.USE_TEX_LOD=1),this.uniforms={u_Camera:[0,0,0],u_MetallicRoughnessValues:[1,1]},this.parameters={},this.generatedTextures=[],i&&(this.uniforms.u_DiffuseEnvSampler=i.getDiffuseEnvSampler(),this.uniforms.u_SpecularEnvSampler=i.getSpecularEnvSampler(),this.uniforms.u_brdfLUT=i.getBrdfTexture(),this.uniforms.u_ScaleIBLAmbient=[1,1]),o&&(this.uniforms.u_ScaleDiffBaseMR=[0,0,0,0],this.uniforms.u_ScaleFGDSpec=[0,0,0,0]),this.defineIfPresent(n.NORMAL,"HAS_NORMALS"),this.defineIfPresent(n.TANGENT&&s,"HAS_TANGENTS"),this.defineIfPresent(n.TEXCOORD_0,"HAS_UV"),this.defineIfPresent(i,"USE_IBL"),this.defineIfPresent(a,"USE_LIGHTS"),this.defineIfPresent(o,"PBR_DEBUG"),r&&this.parseMaterial(r)}var t=e.prototype;return t.defineIfPresent=function(e,t){e&&(this.defines[t]=1)},t.parseTexture=function(e,t,n){var r;void 0===n&&(n=null);var o,i=e.texture&&e.texture.sampler&&e.texture.sampler.parameters||{},a=e.texture.source.image;o=a.compressed?a:{data:a};var s=new P.a(this.gl,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?B(Object(n),!0).forEach((function(t){Object(_.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):B(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({id:e.name||e.id,parameters:i,pixelStore:(r={},r[this.gl.UNPACK_FLIP_Y_WEBGL]=!1,r)},o));this.uniforms[t]=s,this.defineIfPresent(n,n),this.generatedTextures.push(s)},t.parsePbrMetallicRoughness=function(e){e.baseColorTexture&&this.parseTexture(e.baseColorTexture,"u_BaseColorSampler","HAS_BASECOLORMAP"),this.uniforms.u_BaseColorFactor=e.baseColorFactor||[1,1,1,1],e.metallicRoughnessTexture&&this.parseTexture(e.metallicRoughnessTexture,"u_MetallicRoughnessSampler","HAS_METALROUGHNESSMAP");var t=e.metallicFactor,n=void 0===t?1:t,r=e.roughnessFactor,o=void 0===r?1:r;this.uniforms.u_MetallicRoughnessValues=[n,o]},t.parseMaterial=function(e){if(this.uniforms.pbr_uUnlit=Boolean(e.unlit),e.pbrMetallicRoughness&&this.parsePbrMetallicRoughness(e.pbrMetallicRoughness),e.normalTexture){this.parseTexture(e.normalTexture,"u_NormalSampler","HAS_NORMALMAP");var t=e.normalTexture.scale,n=void 0===t?1:t;this.uniforms.u_NormalScale=n}if(e.occlusionTexture){this.parseTexture(e.occlusionTexture,"u_OcclusionSampler","HAS_OCCLUSIONMAP");var r=e.occlusionTexture.strength,o=void 0===r?1:r;this.uniforms.u_OcclusionStrength=o}if(e.emissiveTexture&&(this.parseTexture(e.emissiveTexture,"u_EmissiveSampler","HAS_EMISSIVEMAP"),this.uniforms.u_EmissiveFactor=e.emissiveFactor||[0,0,0]),"MASK"===e.alphaMode){var i=e.alphaCutoff,a=void 0===i?.5:i;this.defines.ALPHA_CUTOFF=1,this.uniforms.u_AlphaCutoff=a}else"BLEND"===e.alphaMode&&(D.j.warn("BLEND alphaMode might not work well because it requires mesh sorting")(),Object.assign(this.parameters,{blend:!0,blendEquation:this.gl.FUNC_ADD,blendFunc:[this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA,this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA]}))},e}();function y(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function G(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?y(Object(n),!0).forEach((function(t){Object(_.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):y(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function x(e,t){(e.COLOR_0||e.colors)&&t||(e.colors={constant:!0,value:new Float32Array([1,1,1])}),N.a.assert(e.positions||e.POSITION,'no "postions" or "POSITION" attribute in mesh')}function H(e,t){if(e.attributes)return x(e.attributes,t),e instanceof S.a?e:new S.a(e);if(e.positions||e.POSITION)return x(e,t),new S.a({attributes:e});throw Error("Invalid mesh")}var w=function(e){function t(){return e.apply(this,arguments)||this}Object(s.a)(t,e);var n=t.prototype;return n.getShaders=function(){var t=e.prototype.getShaders.call(this),n=t.modules;return this.props.material&&n.push(M),G(G({},t),{},{vs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-vs\n\n// Scale the model\nuniform float sizeScale;\nuniform bool composeModelMatrix;\n\n// Primitive attributes\nin vec3 positions;\nin vec3 normals;\nin vec3 colors;\nin vec2 texCoords;\nin vec3 pickingColors;\n\n// Instance attributes\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin mat3 instanceModelMatrix;\nin vec3 instanceTranslation;\n\n// Outputs to fragment shader\nout vec2 vTexCoord;\nout vec3 cameraPosition;\nout vec3 normals_commonspace;\nout vec4 position_commonspace;\nout vec4 vColor;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = texCoords;\n  geometry.pickingColor = pickingColors;\n\n  #ifdef MODULE_PBR\n    // set PBR data\n    #ifdef HAS_NORMALS\n      pbr_vNormal = project_normal(instanceModelMatrix * normals);\n      geometry.normal = pbr_vNormal;\n    #endif\n\n    #ifdef HAS_UV\n      pbr_vUV = texCoords;\n    #else\n      pbr_vUV = vec2(0., 0.);\n    #endif\n    geometry.uv = pbr_vUV;\n  #endif\n\n  vTexCoord = texCoords;\n  cameraPosition = project_uCameraPosition;\n  normals_commonspace = project_normal(instanceModelMatrix * normals);\n  vColor = vec4(colors * instanceColors.rgb, instanceColors.a);\n  geometry.normal = normals_commonspace;\n\n  #ifdef MODULE_PBR\n    // set PBR data\n    pbr_vPosition = geometry.position.xyz;\n  #endif\n\n  vec3 pos = (instanceModelMatrix * positions) * sizeScale + instanceTranslation;\n\n  if (composeModelMatrix) {\n    DECKGL_FILTER_SIZE(pos, geometry);\n    gl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), position_commonspace);\n  }\n  else {\n    pos = project_size(pos);\n    DECKGL_FILTER_SIZE(pos, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, position_commonspace);\n  }\n\n  geometry.position = position_commonspace;\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-fs\n\nprecision highp float;\n\nuniform bool hasTexture;\nuniform sampler2D sampler;\nuniform bool flatShading;\nuniform float opacity;\n\nin vec2 vTexCoord;\nin vec3 cameraPosition;\nin vec3 normals_commonspace;\nin vec4 position_commonspace;\nin vec4 vColor;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  \n#ifdef MODULE_PBR\n\n  fragColor = vColor * pbr_filterColor(vec4(0));\n  geometry.uv = pbr_vUV;\n  fragColor.a *= opacity;\n\n#else\n\n  geometry.uv = vTexCoord;\n\n  vec3 normal;\n  if (flatShading) {\n\n// NOTE(Tarek): This is necessary because\n// headless.gl reports the extension as\n// available but does not support it in\n// the shader.\n#ifdef DERIVATIVES_AVAILABLE\n    normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n#else\n    normal = vec3(0.0, 0.0, 1.0);\n#endif\n  } else {\n    normal = normals_commonspace;\n  }\n\n  vec4 color = hasTexture ? texture(sampler, vTexCoord) : vColor;\n  vec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);\n  fragColor = vec4(lightColor, color.a * opacity);\n\n#endif\n\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n}\n"})},n.initializeState=function(){e.prototype.initializeState.call(this),this.state.attributeManager.add({pickingColors:{type:f.a.UNSIGNED_BYTE,size:3,noAlloc:!0,update:this.calculatePickingColors}})},n.getModel=function(e){var t,n,r=null;this.props.material&&(r=new U(this.context.gl,{attributes:{NORMAL:e.attributes.normals,TEXCOORD_0:e.attributes.texCoords},material:this.props.material,pbrDebug:!1,imageBasedLightingEnvironment:null,lights:!0,useTangents:!1}));var o=new L.a(this.context.gl,Object.assign({},this.getShaders(),{id:this.props.id,geometry:H(e,this.props._useMeshColors),defines:null===(t=r)||void 0===t?void 0:t.defines,parameters:null===(n=r)||void 0===n?void 0:n.parameters,isInstanced:!0})),i=this.props.texture,a=this.state.emptyTexture;return r?o.setUniforms(r.uniforms):o.setUniforms({sampler:i||a,hasTexture:Boolean(i)}),o},n.setTexture=function(e){if(!this.props.material){var t=this.state,n=t.emptyTexture,r=t.model;r&&r.setUniforms({sampler:e||n,hasTexture:Boolean(e)})}},n.calculatePickingColors=function(e){for(var t=this.props.mesh.attributes.featureIds.value,n=new Uint8ClampedArray(t.length*e.size),r=0;r<t.length;r++){var o=this.encodePickingColor(t[r]);n[3*r]=o[0],n[3*r+1]=o[1],n[3*r+2]=o[2]}e.value=n},t}(O.a);function X(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function V(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?X(Object(n),!0).forEach((function(t){Object(_.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):X(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}w.layerName="MeshLayer";var W=[0],j=function(e){function t(){return e.apply(this,arguments)||this}Object(s.a)(t,e);var n=t.prototype;return n._makeSimpleMeshLayer=function(e,t){var n=e.content,r=n.attributes,o=n.modelMatrix,i=n.cartographicOrigin,a=n.texture,s=n.material,_=this.props,l=_.pickable,u=_.autoHighlight,c=t&&t.props.mesh||new S.a({drawMode:f.a.TRIANGLES,attributes:k(r)});return new w(this.getSubLayerProps({id:"mesh"}),{id:this.id+"-mesh-"+e.id,mesh:c,data:W,getPosition:[0,0,0],getColor:[255,255,255],texture:a,material:s,modelMatrix:o,coordinateOrigin:i,coordinateSystem:d.a.METER_OFFSETS,pickable:l,autoHighlight:u,highlightColor:[0,0,255,150]})},n.getSelectedFeatureAttributes=function(e,t){if(t<0||!e||!e.header)return null;if(!e.header.userData.layerFeaturesAttributes)return null;for(var n=e.tileset.tileset.attributeStorageInfo,r=e.header.userData.layerFeaturesAttributes,o={},i=null,a=0;a<n.length;a++){var s=n[a].name,_=r[a][s],l=_[t];void 0===l&&(i=null!==i?i:_.indexOf(t),l=_[i]),o[s]=l.toString().replace(/\u0000/g,"")}return o},t}(I.a);function k(e){var t={};return t.positions=V(V({},e.positions),{},{value:new Float32Array(e.positions.value)}),e.normals&&(t.normals=e.normals),e.texCoords&&(t.texCoords=e.texCoords),e.featureIds&&(t.featureIds=e.featureIds),t}var Y=n("24Wh"),K=n("KQm4"),z=n("zXfU"),Z=n("Ns70"),q=n("O6hP"),Q=n("rOwd");function J(e){var t=e.halfSize,n=Z.a.WGS84.cartographicToCartesian(e.center),r=(new Q.a).fromCornerPoints([n[0]-t[0],n[1]-t[1],n[2]-t[2]],[n[0]+t[0],n[1]+t[1],n[2]+t[2]]);return[].concat(Object(K.a)(e.center),[r.radius])}function $(e){return ee.apply(this,arguments)}function ee(){return(ee=Object(i.a)(o.a.mark((function e(t){return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",JSON.parse((new TextDecoder).decode(t)));case 1:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var te={name:"I3S Node Page",id:"i3s-node-page",module:"i3s",version:"undefined"!=typeof __VERSION__?__VERSION__:"latest",mimeTypes:["application/json"],parse:function(e){return ne.apply(this,arguments)},extensions:["json"],options:{}};function ne(){return(ne=Object(i.a)(o.a.mark((function e(t){return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=$(t),e.abrupt("return",t);case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function re(e,t){return void 0===t&&(t=null),t?e+"?token="+t:e}function oe(e,t){for(var n=[],r=e.attributeStorageInfo,o=e.url,i=0;i<r.length;i++){var a=r[i].key;n.push(o+"/nodes/"+t+"/attributes/"+a+"/0")}return n}var ie=n("ipMt");function ae(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return se(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return se(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0;return function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(n=e[Symbol.iterator]()).next.bind(n)}function se(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var _e=function(){function e(e,t){void 0===t&&(t={}),this.tileset=e,this.nodesPerPage=e.nodePages.nodesPerPage,this.lodSelectionMetricType=e.nodePages.lodSelectionMetricType,this.options=t,this.nodePages=[],this.textureDefinitionsSelectedFormats=[],this._initSelectedFormatsForTextureDefinitions(e)}var t=e.prototype;return t.getNodeById=function(){var e=Object(i.a)(o.a.mark((function e(t){var n,r,i;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=Math.floor(t/this.nodesPerPage),this.nodePages[n]){e.next=7;break}return r=this.tileset.url+"/nodepages/"+n,this.nodePages[n]=Object(Y.a)(r,te,this.options),e.next=6,this.nodePages[n];case 6:this.nodePages[n]=e.sent;case 7:if(!(this.nodePages[n]instanceof Promise)){e.next=11;break}return e.next=10,this.nodePages[n];case 10:this.nodePages[n]=e.sent;case 11:return i=t%this.nodesPerPage,e.abrupt("return",this.nodePages[n].nodes[i]);case 13:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),t.formTileFromNodePages=function(){var e=Object(i.a)(o.a.mark((function e(t){var n,r,i,a,s,_,l,u,c,E,R,T,p,A,f,S,d,I,N;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getNodeById(t);case 2:n=e.sent,r=[],i=ae(n.children||[]);case 5:if((a=i()).done){e.next=13;break}return s=a.value,e.next=9,this.getNodeById(s);case 9:_=e.sent,r.push({id:s,obb:_.obb,mbs:J(_.obb)});case 11:e.next=5;break;case 13:return l=null,u=null,c=null,E="jpeg",R=[],T=!1,n&&n.mesh&&(p=n.mesh.geometry&&this._getContentUrl(n.mesh.geometry)||{url:null,isDracoGeometry:null},A=p.url,f=p.isDracoGeometry,l=A,T=f,S=this._getInformationFromMaterial(n.mesh.material),d=S[0],I=S[1],c=I,E=d.format||E,d.name&&(u=this.tileset.url+"/nodes/"+n.mesh.material.resource+"/textures/"+d.name),this.tileset.attributeStorageInfo&&(R=oe(this.tileset,n.mesh.material.resource))),N=this._getLodSelection(n),e.abrupt("return",ce({id:t,lodSelection:N,obb:n.obb,mbs:J(n.obb),contentUrl:l,textureUrl:u,attributeUrls:R,materialDefinition:c,textureFormat:E,children:r,isDracoGeometry:T}));case 22:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),t._getContentUrl=function(e){var t={},n=this.tileset.geometryDefinitions[e.definition],r=-1;if(this.options.i3s&&this.options.i3s.useDracoGeometry&&(r=n.geometryBuffers.findIndex((function(e){return e.compressedAttributes&&"draco"===e.compressedAttributes.encoding}))),-1===r&&(r=n.geometryBuffers.findIndex((function(e){return!e.compressedAttributes}))),-1!==r){var o=Boolean(n.geometryBuffers[r].compressedAttributes);t={url:this.tileset.url+"/nodes/"+e.resource+"/geometries/"+r,isDracoGeometry:o}}return t},t._getLodSelection=function(e){var t=[];return"maxScreenThresholdSQ"===this.lodSelectionMetricType&&t.push({metricType:"maxScreenThreshold",maxError:Math.sqrt(e.lodThreshold/(.25*Math.PI))}),t.push({metricType:this.lodSelectionMetricType,maxError:e.lodThreshold}),t},t._getInformationFromMaterial=function(e){var t={name:null,format:null};if(e){var n=this.tileset.materialDefinitions[e.definition],r=n&&n.pbrMetallicRoughness&&n.pbrMetallicRoughness.baseColorTexture&&n.pbrMetallicRoughness.baseColorTexture.textureSetDefinitionId;return r||0===r?[this.textureDefinitionsSelectedFormats[r]||t,n]:[t,n]}return[t,null]},t._initSelectedFormatsForTextureDefinitions=function(e){this.textureDefinitionsSelectedFormats=[];for(var t,n=this._getSupportedTextureFormats(),r=ae(e.textureSetDefinitions||[]);!(t=r()).done;){for(var o,i=t.value,a=i&&i.formats||[],s=null,_=function(){var e=o.value,t=a.find((function(t){return t.format===e}));if(t)return s=t,"break"},l=ae(n);!(o=l()).done;){if("break"===_())break}this.textureDefinitionsSelectedFormats.push(s)}},t._getSupportedTextureFormats=function(e){void 0===e&&(e={});var t=[];if(!this.options.i3s||this.options.i3s.useCompressedTextures){var n=Object(ie.a)();n.has("etc2")&&t.push("ktx-etc2"),n.has("dxt")&&t.push("dds")}return t.push("jpg"),t.push("png"),t},e}(),le=new z.a;function ue(e,t,n){return e.url=n.url,e.featureData&&(e.featureUrl=e.url+"/"+e.featureData[0].href),e.geometryData&&(e.contentUrl=e.url+"/"+e.geometryData[0].href),e.textureData&&(e.textureUrl=e.url+"/"+e.textureData[0].href),e.attributeData&&(e.attributeUrls=function(e){for(var t=e.url,n=e.attributeData,r=[],o=0;o<n.length;o++){var i=n[o].href.replace("./","");r.push(t+"/"+i)}return r}(e)),ce(e)}function ce(e){le.copy(e.mbs);var t=Z.a.WGS84.cartographicToCartesian(e.mbs.slice(0,3));return e.boundingVolume={sphere:[].concat(Object(K.a)(t),[e.mbs[3]])},e.lodMetricType=e.lodSelection[0].metricType,e.lodMetricValue=e.lodSelection[0].maxError,e.transformMatrix=e.transform,e.type=q.f.MESH,e.refine=q.e.REPLACE,e}function Ee(e,t,n){return Re.apply(this,arguments)}function Re(){return(Re=Object(i.a)(o.a.mark((function e(t,n,r){var i;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t.url=r.url,!t.nodePages){e.next=8;break}return t.nodePagesTile=new _e(t,n),e.next=5,t.nodePagesTile.formTileFromNodePages(0);case 5:t.root=e.sent,e.next=12;break;case 8:return i=re(t.url+"/nodes/root",n.token),e.next=11,Object(Y.a)(i,t.loader,{i3s:{loadContent:!1,isTileHeader:!0,isTileset:!1}});case 11:t.root=e.sent;case 12:t.basePath=t.url,t.type=q.c.I3S,t.lodMetricType=t.root.lodMetricType,t.lodMetricValue=t.root.lodMetricValue;case 16:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var Te=n("Nw31"),pe=n("gQyj"),Ae=n("pUAI"),fe=n("1Nab"),Se=n("2Daz"),de=n("+PVp");function Ie(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return Ne(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Ne(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0;return function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(n=e[Symbol.iterator]()).next.bind(n)}function Ne(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Oe(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function he(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Oe(Object(n),!0).forEach((function(t){Object(_.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Oe(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var me=new z.a([0,0,0]),Ce={jpeg:pe.a,png:pe.a,"ktx-etc2":de.a,dds:de.a};function ge(e,t,n,r){return be.apply(this,arguments)}function be(){return(be=Object(i.a)(o.a.mark((function e(t,n,r,i){var a,s;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n.content=n.content||{},n.content.featureData=Pe(n,r),n.content.attributes={},!n.textureUrl){e.next=10;break}return a=re(n.textureUrl,i.token),s=Ce[n.textureFormat]||pe.a,e.next=8,Object(Y.a)(a,s);case 8:n.content.texture=e.sent,s===de.a&&(n.content.texture={compressed:!0,mipmaps:!1,width:n.content.texture[0].width,height:n.content.texture[0].height,data:n.content.texture});case 10:return n.content.material=ye(n.materialDefinition,n.content.texture),e.next=13,Me(t,n,i);case 13:return e.abrupt("return",e.sent);case 14:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Me(e,t,n){return Le.apply(this,arguments)}function Le(){return(Le=Object(i.a)(o.a.mark((function e(t,n,r){var i,a,s,_,l,u,c,E,R,T,p,A,f,S,d,I,N,O,h,m,C,g,b,M,L,v,F,P,D,B;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(void 0===n&&(n={}),n.content){e.next=3;break}return e.abrupt("return",n);case 3:if(i=n.content,_=0,l=0,!n.isDracoGeometry){e.next=16;break}return e.next=9,Object(Ae.a)(t,fe.a);case 9:u=e.sent,s=u.header.vertexCount,c=u.indices.value,E=u.attributes,R=E.POSITION,T=E.NORMAL,p=E.COLOR_0,A=E.TEXCOORD_0,f=E.CUSTOM_ATTRIBUTE_3,a={position:Fe(R,c),normal:Fe(T,c),color:Fe(p,c),uv0:Fe(A,c),id:Fe(f,c)},e.next=25;break;case 16:S=i.featureData,d=S.vertexAttributes,I=S.attributesOrder,N=S.featureAttributes,O=S.featureAttributeOrder,h=De(i,t),_=h.byteOffset,s=h.vertexCount,l=h.featureCount,m=Be(t,_,d,s,I),C=m.attributes,g=m.byteOffset,b=Be(t,g,N,l,O),xe(M=b.attributes),a=ve(C,M);case 25:for(B in L=Ue(a.position,n),v=L.enuMatrix,F=L.cartographicOrigin,P=L.cartesianOrigin,D=(new Te.a).multiplyRight(v),i.attributes={positions:a.position,normals:a.normal,colors:a.color,texCoords:a.uv0,featureIds:a.id,faceRange:a.faceRange},i.attributes)i.attributes[B]||delete i.attributes[B];return i.vertexCount=s,i.cartographicCenter=F,i.cartesianOrigin=P,i.modelMatrix=D.invert(),i.byteLength=t.byteLength,e.abrupt("return",n);case 35:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function ve(e,t){return he(he({},e),t)}function Fe(e,t){if(!e)return null;for(var n=e.value.constructor,r=new n(t.length*e.size),o=0;o<t.length;o++){var i=t[o]*e.size;r.set(new n(e.value.buffer,i*e.value.BYTES_PER_ELEMENT,e.size),o*e.size)}return he(he({},e),{},{value:r})}function Pe(e,t){var n=t.store.defaultGeometrySchema,r=n;for(var o in Se.c)for(var i in Se.e){var a=n[o][i];if(a){var s=a.byteOffset,_=void 0===s?0:s,l=a.count,u=void 0===l?0:l,c=a.valueType,E=a.valuesPerElement;r[o][i]={valueType:c,valuesPerElement:E,byteOffset:_,count:u}}}return r.attributesOrder=n.ordering,r}function De(e,t){var n=0,r=0,o=0,i=e.featureData[Se.d.header];for(var a in i){var s=i[a],_=s.property,l=s.type,u=Se.i[l];_===Se.d.vertexCount&&(r=new u(t,0,4)[0],n+=Se.g[l]),_===Se.d.featureCount&&(o=new u(t,4,4)[0],n+=Se.g[l])}return{vertexCount:r,featureCount:o,byteOffset:n}}function Be(e,t,n,r,o){for(var i,a={},s=Ie(o);!(i=s()).done;){var _=i.value;if(n[_]){var l=n[_],u=l.valueType,c=l.valuesPerElement,E=r;if(t+E*c>e.byteLength)break;var R=new(0,Se.i[u])(e.slice(t),0,E*c);switch(a[_]={value:R,type:Se.b[u],size:c},_){case"color":a.color.normalized=!0}t+=E*c*Se.g[u]}}return{attributes:a,byteOffset:t}}function Ue(e,t){var n=t.mbs,r=e.value,o=e.metadata,i=new Te.a,a=new z.a(n[0],n[1],n[2]),s=new z.a;return Z.a.WGS84.cartographicToCartesian(a,s),Z.a.WGS84.eastNorthUpToFixedFrame(s,i),e.value=function(e,t,n){void 0===t&&(t={});for(var r=new Float64Array(e.length),o=t["i3s-scale_x"]&&t["i3s-scale_x"].double||1,i=t["i3s-scale_y"]&&t["i3s-scale_y"].double||1,a=0;a<r.length;a+=3)r[a]=e[a]*o+n.x,r[a+1]=e[a+1]*i+n.y,r[a+2]=e[a+2]+n.z;for(var s=0;s<r.length;s+=3)Z.a.WGS84.cartographicToCartesian(r.subarray(s,s+3),me),r[s]=me.x,r[s+1]=me.y,r[s+2]=me.z;return r}(r,o,a),{enuMatrix:i,fixedFrameToENUMatrix:i.invert(),cartographicOrigin:a,cartesianOrigin:s}}function ye(e,t){if(!e)return null;var n=he(he({},e),{},{pbrMetallicRoughness:e.pbrMetallicRoughness?he({},e.pbrMetallicRoughness):{baseColorFactor:[255,255,255,255]}});return n.alphaCutoff=n.alphaCutoff||.25,n.alphaMode&&(n.alphaMode=n.alphaMode.toUpperCase()),n.emissiveFactor&&(n.emissiveFactor=Ge(n.emissiveFactor)),n.pbrMetallicRoughness&&n.pbrMetallicRoughness.baseColorFactor&&(n.pbrMetallicRoughness.baseColorFactor=Ge(n.pbrMetallicRoughness.baseColorFactor)),function(e,t){var n={source:{image:t}};e.pbrMetallicRoughness&&e.pbrMetallicRoughness.baseColorTexture?e.pbrMetallicRoughness.baseColorTexture=he(he({},e.pbrMetallicRoughness.baseColorTexture),{},{texture:n}):e.emissiveTexture?e.emissiveTexture=he(he({},e.emissiveTexture),{},{texture:n}):e.pbrMetallicRoughness&&e.pbrMetallicRoughness.metallicRoughnessTexture?e.pbrMetallicRoughness.metallicRoughnessTexture=he(he({},e.pbrMetallicRoughness.metallicRoughnessTexture),{},{texture:n}):e.normalTexture?e.normalTexture=he(he({},e.normalTexture),{},{texture:n}):e.occlusionTexture&&(e.occlusionTexture=he(he({},e.occlusionTexture),{},{texture:n}))}(n,t),n}function Ge(e){for(var t=Object(K.a)(e),n=0;n<e.length;n++)t[n]=e[n]/255;return t}function xe(e){for(var t=e.id.value,n=e.faceRange.value,r=n[n.length-1]+1,o=new Uint32Array(3*r),i=0,a=0,s=1;s<n.length;s+=2){var _=Number(t[i]),l=a+3*(n[s]-n[s-1]+1);o.fill(_,a,l),i++,a=l}e.id.value=o}var He=n("qTUp"),we={name:"I3S Attribute",id:"i3s-attribute",module:"i3s",version:"undefined"!=typeof __VERSION__?__VERSION__:"latest",mimeTypes:["application/binary"],parse:function(e,t){return Xe.apply(this,arguments)},extensions:["bin"],options:{},binary:!0};function Xe(){return(Xe=Object(i.a)(o.a.mark((function e(t,n){return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=Object(He.a)(t,n),e.abrupt("return",t);case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var Ve="undefined"!=typeof __VERSION__?__VERSION__:"latest",We=/layers\/[0-9]+$/,je=/nodes\/([0-9-]+|root)$/,ke={name:"I3S (Indexed Scene Layers)",id:"i3s",module:"i3s",version:Ve,mimeTypes:["application/octet-stream"],parse:function(e,t,n,r){return Ye.apply(this,arguments)},extensions:["bin"],options:{i3s:{loadContent:!0,isTileset:"auto",isTileHeader:"auto",tile:null,tileset:null,useDracoGeometry:!0,useCompressedTextures:!0,loadFeatureAttributes:!0}}};function Ye(){return(Ye=Object(i.a)(o.a.mark((function e(t,n,r,i){var a,s,_;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(a=r.url,n.i3s=n.i3s||{},s="auto"===n.i3s.isTileset?We.test(a):n.i3s.isTileset,_="auto"===n.isTileHeader?je.test(a):n.i3s.isTileHeader,!s){e.next=10;break}return e.next=7,Ze(t,n,r);case 7:t=e.sent,e.next=23;break;case 10:if(!_){e.next=20;break}return e.next=13,Qe(t,n,r);case 13:if(t=e.sent,!n.i3s.loadContent){e.next=18;break}return n.i3s.tile=t,e.next=18,Object(Y.a)(t.contentUrl,ke,n);case 18:e.next=23;break;case 20:return e.next=22,Ke(t,n,r);case 22:t=e.sent;case 23:return e.abrupt("return",t);case 24:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Ke(e,t,n){return ze.apply(this,arguments)}function ze(){return(ze=Object(i.a)(o.a.mark((function e(t,n,r){var i,a,s,_;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return i=n.i3s,a=i.tile,s=i.tileset,_=i.loadFeatureAttributes,a.content=a.content||{},a.userData=a.userData||{},e.next=5,ge(t,a,s,n);case 5:if(!_){e.next=8;break}return e.next=8,$e(a,s);case 8:return e.abrupt("return",a.content);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Ze(e,t,n){return qe.apply(this,arguments)}function qe(){return(qe=Object(i.a)(o.a.mark((function e(t,n,r){var i;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(i=JSON.parse((new TextDecoder).decode(t))).loader=ke,e.next=4,Ee(i,n,r);case 4:return e.abrupt("return",i);case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Qe(e,t,n){return Je.apply(this,arguments)}function Je(){return(Je=Object(i.a)(o.a.mark((function e(t,n,r){return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=JSON.parse((new TextDecoder).decode(t)),e.abrupt("return",ue(t,0,r));case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function $e(e,t){return et.apply(this,arguments)}function et(){return(et=Object(i.a)(o.a.mark((function e(t,n){var r,i,a,s,_,l,u,c;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r=n.attributeStorageInfo,i=t.attributeUrls,a=[],s=0;case 4:if(!(s<r.length)){e.next=20;break}return _=i[s],l=r[s].name,u=tt(r[s]),e.prev=8,e.next=11,Object(Y.a)(_,we,{attributeName:l,attributeType:u});case 11:c=e.sent,a.push(c),e.next=17;break;case 15:e.prev=15,e.t0=e.catch(8);case 17:s++,e.next=4;break;case 20:t.userData.layerFeaturesAttributes=a;case 21:case"end":return e.stop()}}),e,null,[[8,15]])})))).apply(this,arguments)}function tt(e){return e.hasOwnProperty("objectIds")?"Oid32":e.hasOwnProperty("attributeValues")?e.attributeValues.valueType:null}var nt=n("J4mz");function rt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function ot(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?rt(Object(n),!0).forEach((function(t){Object(_.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):rt(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var it={height:600,width:800,pitch:45,maxPitch:60,bearing:0,minZoom:2,maxZoom:30,zoom:14.5},at={"San Francisco":{name:"San Francisco",url:"https://tiles.arcgis.com/tiles/z2tnIkrLQ2BRzr6P/arcgis/rest/services/SanFrancisco_Bldgs/SceneServer/layers/0",viewport:ot(ot({},it),{},{longitude:-120,latitude:34})},"San Francisco v1.7":{name:"San Francisco v1.7",url:"https://tiles.arcgis.com/tiles/z2tnIkrLQ2BRzr6P/arcgis/rest/services/SanFrancisco_3DObjects_1_7/SceneServer/layers/0",viewport:ot(ot({},it),{},{longitude:-120,latitude:34})},"New York":{name:"New York",url:"https://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_NewYork_17/SceneServer/layers/0",viewport:ot(ot({},it),{},{longitude:-74,latitude:40})}},st=n("vOnD"),_t={"Base Map: Satellite":"https://basemaps.cartocdn.com/gl/voyager-nolabels-gl-style/style.json","Base Map: Light":"https://basemaps.cartocdn.com/gl/positron-nolabels-gl-style/style.json","Base Map: Dark":"https://basemaps.cartocdn.com/gl/dark-matter-nolabels-gl-style/style.json"},lt=_t["Base Map: Dark"],ut=st.c.div.withConfig({displayName:"control-panel__Container",componentId:"sc-14q5t5u-0"})(["display:flex;flex-direction:column;position:absolute;top:0;right:0;width:300px;background:#fff;box-shadow:0 2px 4px rgba(0,0,0,0.3);padding:12px 18px;margin:20px;font-size:13px;line-height:2;outline:none;z-index:100;"]),ct=st.c.select.withConfig({displayName:"control-panel__DropDown",componentId:"sc-14q5t5u-1"})(["margin-bottom:12px;"]),Et=st.c.select.withConfig({displayName:"control-panel__TilesetDropDown",componentId:"sc-14q5t5u-2"})(["margin-bottom:12px;font-weight:800;font-size:16px;"]),Rt=st.c.div.withConfig({displayName:"control-panel__FrameWrap",componentId:"sc-14q5t5u-3"})(["height:fit-content;padding:0;overflow:hidden;"]),Tt=st.c.div.withConfig({displayName:"control-panel__FrameControl",componentId:"sc-14q5t5u-4"})(["margin:",";display:flex;flex-direction:row;align-items:center;justify-content:space-between;width:100%;"],(function(e){return e.showFullInfo?"12px 0":0})),pt=st.c.div.withConfig({displayName:"control-panel__FrameButton",componentId:"sc-14q5t5u-5"})(["display:flex;padding:6px 12px;color:white;background:rgb(52,152,219);align-items:center;height:20px;&:hover{background:rgb(0,152,219);cursor:pointer;}"]),At=function(e){function t(t){var n;return(n=e.call(this,t)||this)._renderMapStyles=n._renderMapStyles.bind(Object(a.a)(n)),n.state={showFullInfo:!1},n}Object(s.a)(t,e);var n=t.prototype;return n._renderExamples=function(){var e=this,t=this.props,n=t.name,r=t.onExampleChange;return u.a.createElement(Et,{value:n,onChange:function(t){var n=t.target.value;e.setState({selected:n}),r(at[n])}},!n&&u.a.createElement("option",{key:"custom-example",value:"custom-example"},"Custom example"),Object.keys(at).map((function(e){var t=at[e];return u.a.createElement("option",{key:e,value:t.name},t.name)})))},n._renderMapStyles=function(){var e=this.props,t=e.mapStyles,n=void 0===t?_t:t,r=e.selectedMapStyle,o=e.onMapStyleChange;return u.a.createElement(ct,{value:r,onChange:function(e){var t=e.target.value;o({selectedMapStyle:t})}},Object.keys(n).map((function(e){return u.a.createElement("option",{key:e,value:n[e]},e)})))},n._renderInfo=function(){var e=this,t=this.props,n=t.metadata,r=t.token,o=this.state.showFullInfo;if(!n)return null;var i="https://www.arcgis.com/home/item.html?id="+n.serviceItemId;return r&&(i=i+"&token="+r),u.a.createElement(Rt,null,u.a.createElement("iframe",{id:"tileset-info",title:"tileset-info",style:{display:o?"inherit":"none",height:500,width:"99%",border:"1px solid rgba(200, 200, 200, 100)"},src:i}),u.a.createElement(Tt,{showFullInfo:o},u.a.createElement(pt,{onClick:function(){return e.setState({showFullInfo:!o})}},"Show ",o?"Less":"More"),u.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:i},"Go to ArcGIS")))},n.render=function(){return u.a.createElement(ut,null,this._renderExamples(),this._renderMapStyles(),this._renderInfo(),this.props.children)},t}(l.PureComponent);At.defaultProps={droppedFile:null,onChange:function(){}};var ft={display:"flex",position:"absolute",backgroundColor:"white",flexFlow:"column",top:"150px",right:"20px",width:"300px",padding:"12px 18px",maxHeight:"50%"},St={width:"50%",textAlign:"left",borderRight:"3px solid rgba(0,0,0,.05)",padding:".5em .7em"},dt={width:"50%",padding:".5em .7em"},It={maxHeight:"50%",overflowY:"auto"},Nt=function(e){function t(){return e.apply(this,arguments)||this}Object(s.a)(t,e);var n=t.prototype;return n.prepareTable=function(){var e=this.props,t=e.attributesObject,n=e.attributesHeader,r=[];for(var o in t){var i=t[o],a=this.createTableColumn(o,i);r.push(a)}return u.a.createElement("div",{style:It},u.a.createElement("h2",null,t[n]),u.a.createElement("table",null,u.a.createElement("tbody",null,r)))},n.createTableColumn=function(e,t){return u.a.createElement("tr",{key:e},u.a.createElement("th",{style:St},e),u.a.createElement("td",{style:dt},t))},n.render=function(){var e=this.props,t=e.attributesObject,n=e.handleClosePanel;return u.a.createElement("div",{style:ft},t&&this.prepareTable()," ",u.a.createElement("button",{onClick:n},"Close"))},t}(l.PureComponent);function Ot(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function ht(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Ot(Object(n),!0).forEach((function(t){Object(_.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Ot(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}Nt.defaultProps={attributesObject:{},attributesHeader:"NAME",handleClosePanel:function(){}};var mt={longitude:-120,latitude:34,height:600,width:800,pitch:45,maxPitch:60,bearing:0,minZoom:2,maxZoom:30,zoom:14.5},Ct={wordBreak:"break-word",position:"absolute",padding:12,zIndex:"10000",maxWidth:300,background:"#000",color:"#fff"};function gt(e,t){var n=new URL(e),r=e.lastIndexOf("/layers/0"),o=e.substring(0,r),i=t&&t.token;return n.search&&(i=n.searchParams.get("token"),o=""+o+n.search),ht(ht({},t),{},{tilesetUrl:e,token:i,metadataUrl:o})}var bt=function(e){function t(t){var n;return(n=e.call(this,t)||this)._tilesetStatsWidget=null,n.state={url:null,token:null,name:"San Francisco",viewState:mt,selectedMapStyle:lt,selectedFeatureAttributes:null},n._onSelectTileset=n._onSelectTileset.bind(Object(a.a)(n)),n.handleClosePanel=n.handleClosePanel.bind(Object(a.a)(n)),n}Object(s.a)(t,e);var n=t.prototype;return n.componentDidMount=function(){var e;this._memWidget=new nt.a(R.a.get("Memory Usage"),{framesPerUpdate:1,formatters:{"GPU Memory":"memory","Buffer Memory":"memory","Renderbuffer Memory":"memory","Texture Memory":"memory"},container:this._statsWidgetContainer}),this._tilesetStatsWidget=new nt.a(null,{container:this._statsWidgetContainer});var t=new URL(window.location.href).searchParams.get("url");e=t?{url:t}:at["San Francisco"],this._onSelectTileset(e)},n._onSelectTileset=function(){var e=Object(i.a)(o.a.mark((function e(t){var n,r,i,a,s,_;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=gt(t.url,t),r=n.tilesetUrl,i=n.token,a=n.name,s=n.metadataUrl,this.setState({tilesetUrl:r,name:a,token:i}),e.next=5,fetch(s).then((function(e){return e.json()}));case 5:_=e.sent,this.setState({metadata:_,selectedFeatureAttributes:null});case 7:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),n._updateStatWidgets=function(){this._memWidget.update(),this._tilesetStatsWidget.update()},n._onTilesetLoad=function(e){var t=e.zoom,n=e.cartographicCenter,r=n[0],o=n[1],i=ht(ht({},this.state.viewState),{},{zoom:t+2.5,longitude:r,latitude:o});this.setState({tileset:e,viewState:ht(ht({},i),{},{transitionDuration:4e3,transitionInterpolator:new p.a})}),this._tilesetStatsWidget.setStats(e.stats)},n._onViewStateChange=function(e){var t=e.viewState;this.setState({viewState:t})},n._onSelectMapStyle=function(e){var t=e.selectedMapStyle;this.setState({selectedMapStyle:t})},n._renderLayers=function(){var e=this,t=this.state,n=t.tilesetUrl,r=t.token,o={throttleRequests:!0,loadFeatureAttributes:!0};return r&&(o.token=r),[new j({data:n,loader:ke,onTilesetLoad:this._onTilesetLoad.bind(this),onTileLoad:function(){return e._updateStatWidgets()},onTileUnload:function(){return e._updateStatWidgets()},onClick:function(t){return e.handleShowAttributesPanel(t)},pickable:!0,autoHighlight:!0,loadOptions:o})]},n.handleShowAttributesPanel=function(e){var t=e.layer.getSelectedFeatureAttributes(e.object,e.index);this.setState({selectedFeatureAttributes:t})},n._renderStats=function(){var e=this;return u.a.createElement("div",{style:Ct,ref:function(t){return e._statsWidgetContainer=t}})},n._renderControlPanel=function(){var e=this.state,t=e.name,n=e.tileset,r=e.token,o=e.metadata,i=e.selectedMapStyle;return u.a.createElement(At,{tileset:n,name:t,metadata:o,token:r,onExampleChange:this._onSelectTileset,onMapStyleChange:this._onSelectMapStyle.bind(this),selectedMapStyle:i})},n.getTooltip=function(e){if(!e.object||e.index<0||!e.layer)return null;var t=e.layer.getSelectedFeatureAttributes(e.object,e.index);return t?JSON.stringify(t,null,2).replace(/[{}']+/g,""):"loading metadata..."},n.handleClosePanel=function(){this.setState({selectedFeatureAttributes:null})},n.render=function(){var e=this,t=this._renderLayers(),n=this.state,r=n.viewState,o=n.selectedMapStyle,i=n.selectedFeatureAttributes;return u.a.createElement("div",{style:{position:"relative",height:"100%"}},this._renderStats(),this._renderControlPanel(),u.a.createElement(T.a,{layers:t,viewState:r,onViewStateChange:this._onViewStateChange.bind(this),controller:{type:A.a,maxPitch:85},onAfterRender:function(){return e._updateStatWidgets()},getTooltip:function(t){return e.getTooltip(t)}},u.a.createElement(E.a,{mapStyle:o,preventStyleDiffing:!0})),i&&u.a.createElement(Nt,{handleClosePanel:this.handleClosePanel,attributesObject:i}))},t}(l.PureComponent);function Mt(e){Object(c.render)(u.a.createElement(bt,null),e)}},qTUp:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return l}));var r=n("o0o1"),o=n.n(r),i=(n("wcNg"),n("HaE+")),a=n("2Daz");function s(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return _(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0;return function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(n=e[Symbol.iterator]()).next.bind(n)}function _(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function l(e,t){return u.apply(this,arguments)}function u(){return(u=Object(i.a)(o.a.mark((function e(t,n){var r,i,a;return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(i=n.attributeName,a=n.attributeType,i&&a){e.next=3;break}return e.abrupt("return",{});case 3:return e.abrupt("return",((r={})[i]=c(a,t),r));case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function c(t,n){switch(t){case a.h:return function(t){for(var n,r=new Uint32Array(t,0,4)[0],o=new Uint32Array(t,8,r),i=[],a=8+4*r,_=s(o);!(n=_()).done;){var l=n.value,u=e.from(t,a,l).toString();i.push(u),a+=l}return i}(n);case a.f:return E(n);case a.a:return function(e){return new Float64Array(e,8)}(n);default:return E(n)}}function E(e){return new Uint32Array(e,4)}}).call(this,n("HDXh").Buffer)}}]);